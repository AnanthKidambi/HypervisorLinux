
build/hellomod.ko:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__pfx_GetGdtBase>:
       0:	90                   	nop
       1:	90                   	nop
       2:	90                   	nop
       3:	90                   	nop
       4:	90                   	nop
       5:	90                   	nop
       6:	90                   	nop
       7:	90                   	nop
       8:	90                   	nop
       9:	90                   	nop
       a:	90                   	nop
       b:	90                   	nop
       c:	90                   	nop
       d:	90                   	nop
       e:	90                   	nop
       f:	90                   	nop

0000000000000010 <GetGdtBase>:
      10:	48 8d 44 24 f6       	lea    -0xa(%rsp),%rax
      15:	0f 01 00             	sgdt   (%rax)
      18:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
      1d:	48 89 d0             	mov    %rdx,%rax
      20:	31 d2                	xor    %edx,%edx
      22:	e9 00 00 00 00       	jmp    27 <GetGdtBase+0x17>
      27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
      2e:	00 00 

0000000000000030 <__pfx_GetGdtLimit>:
      30:	90                   	nop
      31:	90                   	nop
      32:	90                   	nop
      33:	90                   	nop
      34:	90                   	nop
      35:	90                   	nop
      36:	90                   	nop
      37:	90                   	nop
      38:	90                   	nop
      39:	90                   	nop
      3a:	90                   	nop
      3b:	90                   	nop
      3c:	90                   	nop
      3d:	90                   	nop
      3e:	90                   	nop
      3f:	90                   	nop

0000000000000040 <GetGdtLimit>:
      40:	48 8d 44 24 f6       	lea    -0xa(%rsp),%rax
      45:	0f 01 00             	sgdt   (%rax)
      48:	66 8b 54 24 f6       	mov    -0xa(%rsp),%dx
      4d:	89 d0                	mov    %edx,%eax
      4f:	31 d2                	xor    %edx,%edx
      51:	e9 00 00 00 00       	jmp    56 <GetGdtLimit+0x16>
      56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
      5d:	00 00 00 

0000000000000060 <__pfx_SetGdtr>:
      60:	90                   	nop
      61:	90                   	nop
      62:	90                   	nop
      63:	90                   	nop
      64:	90                   	nop
      65:	90                   	nop
      66:	90                   	nop
      67:	90                   	nop
      68:	90                   	nop
      69:	90                   	nop
      6a:	90                   	nop
      6b:	90                   	nop
      6c:	90                   	nop
      6d:	90                   	nop
      6e:	90                   	nop
      6f:	90                   	nop

0000000000000070 <SetGdtr>:
      70:	55                   	push   %rbp
      71:	48 89 e5             	mov    %rsp,%rbp
      74:	48 83 ec 08          	sub    $0x8,%rsp
      78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      7c:	0f 01 55 f8          	lgdt   -0x8(%rbp)
      80:	c9                   	leave
      81:	31 ff                	xor    %edi,%edi
      83:	e9 00 00 00 00       	jmp    88 <SetGdtr+0x18>
      88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
      8f:	00 

0000000000000090 <__pfx_GetCs>:
      90:	90                   	nop
      91:	90                   	nop
      92:	90                   	nop
      93:	90                   	nop
      94:	90                   	nop
      95:	90                   	nop
      96:	90                   	nop
      97:	90                   	nop
      98:	90                   	nop
      99:	90                   	nop
      9a:	90                   	nop
      9b:	90                   	nop
      9c:	90                   	nop
      9d:	90                   	nop
      9e:	90                   	nop
      9f:	90                   	nop

00000000000000a0 <GetCs>:
      a0:	e8 00 00 00 00       	call   a5 <GetCs+0x5>
      a5:	55                   	push   %rbp
      a6:	48 89 e5             	mov    %rsp,%rbp
      a9:	8c c8                	mov    %cs,%eax
      ab:	5d                   	pop    %rbp
      ac:	e9 00 00 00 00       	jmp    b1 <GetCs+0x11>
      b1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
      b8:	00 00 00 00 
      bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000000c0 <__pfx_SetCs>:
      c0:	90                   	nop
      c1:	90                   	nop
      c2:	90                   	nop
      c3:	90                   	nop
      c4:	90                   	nop
      c5:	90                   	nop
      c6:	90                   	nop
      c7:	90                   	nop
      c8:	90                   	nop
      c9:	90                   	nop
      ca:	90                   	nop
      cb:	90                   	nop
      cc:	90                   	nop
      cd:	90                   	nop
      ce:	90                   	nop
      cf:	90                   	nop

00000000000000d0 <SetCs>:
      d0:	e8 00 00 00 00       	call   d5 <SetCs+0x5>
      d5:	55                   	push   %rbp
      d6:	48 89 e5             	mov    %rsp,%rbp
      d9:	8e cf                	mov    %edi,%cs
      db:	5d                   	pop    %rbp
      dc:	31 ff                	xor    %edi,%edi
      de:	e9 00 00 00 00       	jmp    e3 <SetCs+0x13>
      e3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
      ea:	00 00 00 00 
      ee:	66 90                	xchg   %ax,%ax

00000000000000f0 <__pfx_GetDs>:
      f0:	90                   	nop
      f1:	90                   	nop
      f2:	90                   	nop
      f3:	90                   	nop
      f4:	90                   	nop
      f5:	90                   	nop
      f6:	90                   	nop
      f7:	90                   	nop
      f8:	90                   	nop
      f9:	90                   	nop
      fa:	90                   	nop
      fb:	90                   	nop
      fc:	90                   	nop
      fd:	90                   	nop
      fe:	90                   	nop
      ff:	90                   	nop

0000000000000100 <GetDs>:
     100:	8c d8                	mov    %ds,%eax
     102:	e9 00 00 00 00       	jmp    107 <GetDs+0x7>
     107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     10e:	00 00 

0000000000000110 <__pfx_SetDs>:
     110:	90                   	nop
     111:	90                   	nop
     112:	90                   	nop
     113:	90                   	nop
     114:	90                   	nop
     115:	90                   	nop
     116:	90                   	nop
     117:	90                   	nop
     118:	90                   	nop
     119:	90                   	nop
     11a:	90                   	nop
     11b:	90                   	nop
     11c:	90                   	nop
     11d:	90                   	nop
     11e:	90                   	nop
     11f:	90                   	nop

0000000000000120 <SetDs>:
     120:	8e df                	mov    %edi,%ds
     122:	31 ff                	xor    %edi,%edi
     124:	e9 00 00 00 00       	jmp    129 <SetDs+0x9>
     129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000130 <__pfx_GetEs>:
     130:	90                   	nop
     131:	90                   	nop
     132:	90                   	nop
     133:	90                   	nop
     134:	90                   	nop
     135:	90                   	nop
     136:	90                   	nop
     137:	90                   	nop
     138:	90                   	nop
     139:	90                   	nop
     13a:	90                   	nop
     13b:	90                   	nop
     13c:	90                   	nop
     13d:	90                   	nop
     13e:	90                   	nop
     13f:	90                   	nop

0000000000000140 <GetEs>:
     140:	8c c0                	mov    %es,%eax
     142:	e9 00 00 00 00       	jmp    147 <GetEs+0x7>
     147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     14e:	00 00 

0000000000000150 <__pfx_SetEs>:
     150:	90                   	nop
     151:	90                   	nop
     152:	90                   	nop
     153:	90                   	nop
     154:	90                   	nop
     155:	90                   	nop
     156:	90                   	nop
     157:	90                   	nop
     158:	90                   	nop
     159:	90                   	nop
     15a:	90                   	nop
     15b:	90                   	nop
     15c:	90                   	nop
     15d:	90                   	nop
     15e:	90                   	nop
     15f:	90                   	nop

0000000000000160 <SetEs>:
     160:	8e c7                	mov    %edi,%es
     162:	31 ff                	xor    %edi,%edi
     164:	e9 00 00 00 00       	jmp    169 <SetEs+0x9>
     169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000170 <__pfx_GetFs>:
     170:	90                   	nop
     171:	90                   	nop
     172:	90                   	nop
     173:	90                   	nop
     174:	90                   	nop
     175:	90                   	nop
     176:	90                   	nop
     177:	90                   	nop
     178:	90                   	nop
     179:	90                   	nop
     17a:	90                   	nop
     17b:	90                   	nop
     17c:	90                   	nop
     17d:	90                   	nop
     17e:	90                   	nop
     17f:	90                   	nop

0000000000000180 <GetFs>:
     180:	8c e0                	mov    %fs,%eax
     182:	e9 00 00 00 00       	jmp    187 <GetFs+0x7>
     187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     18e:	00 00 

0000000000000190 <__pfx_SetFs>:
     190:	90                   	nop
     191:	90                   	nop
     192:	90                   	nop
     193:	90                   	nop
     194:	90                   	nop
     195:	90                   	nop
     196:	90                   	nop
     197:	90                   	nop
     198:	90                   	nop
     199:	90                   	nop
     19a:	90                   	nop
     19b:	90                   	nop
     19c:	90                   	nop
     19d:	90                   	nop
     19e:	90                   	nop
     19f:	90                   	nop

00000000000001a0 <SetFs>:
     1a0:	8e e7                	mov    %edi,%fs
     1a2:	31 ff                	xor    %edi,%edi
     1a4:	e9 00 00 00 00       	jmp    1a9 <SetFs+0x9>
     1a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000001b0 <__pfx_GetGs>:
     1b0:	90                   	nop
     1b1:	90                   	nop
     1b2:	90                   	nop
     1b3:	90                   	nop
     1b4:	90                   	nop
     1b5:	90                   	nop
     1b6:	90                   	nop
     1b7:	90                   	nop
     1b8:	90                   	nop
     1b9:	90                   	nop
     1ba:	90                   	nop
     1bb:	90                   	nop
     1bc:	90                   	nop
     1bd:	90                   	nop
     1be:	90                   	nop
     1bf:	90                   	nop

00000000000001c0 <GetGs>:
     1c0:	8c e8                	mov    %gs,%eax
     1c2:	e9 00 00 00 00       	jmp    1c7 <GetGs+0x7>
     1c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     1ce:	00 00 

00000000000001d0 <__pfx_SetGs>:
     1d0:	90                   	nop
     1d1:	90                   	nop
     1d2:	90                   	nop
     1d3:	90                   	nop
     1d4:	90                   	nop
     1d5:	90                   	nop
     1d6:	90                   	nop
     1d7:	90                   	nop
     1d8:	90                   	nop
     1d9:	90                   	nop
     1da:	90                   	nop
     1db:	90                   	nop
     1dc:	90                   	nop
     1dd:	90                   	nop
     1de:	90                   	nop
     1df:	90                   	nop

00000000000001e0 <SetGs>:
     1e0:	8e ef                	mov    %edi,%gs
     1e2:	31 ff                	xor    %edi,%edi
     1e4:	e9 00 00 00 00       	jmp    1e9 <SetGs+0x9>
     1e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000001f0 <__pfx_GetSs>:
     1f0:	90                   	nop
     1f1:	90                   	nop
     1f2:	90                   	nop
     1f3:	90                   	nop
     1f4:	90                   	nop
     1f5:	90                   	nop
     1f6:	90                   	nop
     1f7:	90                   	nop
     1f8:	90                   	nop
     1f9:	90                   	nop
     1fa:	90                   	nop
     1fb:	90                   	nop
     1fc:	90                   	nop
     1fd:	90                   	nop
     1fe:	90                   	nop
     1ff:	90                   	nop

0000000000000200 <GetSs>:
     200:	8c d0                	mov    %ss,%eax
     202:	e9 00 00 00 00       	jmp    207 <GetSs+0x7>
     207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     20e:	00 00 

0000000000000210 <__pfx_SetSs>:
     210:	90                   	nop
     211:	90                   	nop
     212:	90                   	nop
     213:	90                   	nop
     214:	90                   	nop
     215:	90                   	nop
     216:	90                   	nop
     217:	90                   	nop
     218:	90                   	nop
     219:	90                   	nop
     21a:	90                   	nop
     21b:	90                   	nop
     21c:	90                   	nop
     21d:	90                   	nop
     21e:	90                   	nop
     21f:	90                   	nop

0000000000000220 <SetSs>:
     220:	8e d7                	mov    %edi,%ss
     222:	31 ff                	xor    %edi,%edi
     224:	e9 00 00 00 00       	jmp    229 <SetSs+0x9>
     229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000230 <__pfx_GetLdtr>:
     230:	90                   	nop
     231:	90                   	nop
     232:	90                   	nop
     233:	90                   	nop
     234:	90                   	nop
     235:	90                   	nop
     236:	90                   	nop
     237:	90                   	nop
     238:	90                   	nop
     239:	90                   	nop
     23a:	90                   	nop
     23b:	90                   	nop
     23c:	90                   	nop
     23d:	90                   	nop
     23e:	90                   	nop
     23f:	90                   	nop

0000000000000240 <GetLdtr>:
     240:	0f 00 c0             	sldt   %eax
     243:	e9 00 00 00 00       	jmp    248 <GetLdtr+0x8>
     248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     24f:	00 

0000000000000250 <__pfx_SetLdtr>:
     250:	90                   	nop
     251:	90                   	nop
     252:	90                   	nop
     253:	90                   	nop
     254:	90                   	nop
     255:	90                   	nop
     256:	90                   	nop
     257:	90                   	nop
     258:	90                   	nop
     259:	90                   	nop
     25a:	90                   	nop
     25b:	90                   	nop
     25c:	90                   	nop
     25d:	90                   	nop
     25e:	90                   	nop
     25f:	90                   	nop

0000000000000260 <SetLdtr>:
     260:	0f 00 d7             	lldt   %edi
     263:	31 ff                	xor    %edi,%edi
     265:	e9 00 00 00 00       	jmp    26a <SetLdtr+0xa>
     26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000270 <__pfx_GetTr>:
     270:	90                   	nop
     271:	90                   	nop
     272:	90                   	nop
     273:	90                   	nop
     274:	90                   	nop
     275:	90                   	nop
     276:	90                   	nop
     277:	90                   	nop
     278:	90                   	nop
     279:	90                   	nop
     27a:	90                   	nop
     27b:	90                   	nop
     27c:	90                   	nop
     27d:	90                   	nop
     27e:	90                   	nop
     27f:	90                   	nop

0000000000000280 <GetTr>:
     280:	0f 00 c8             	str    %eax
     283:	e9 00 00 00 00       	jmp    288 <GetTr+0x8>
     288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     28f:	00 

0000000000000290 <__pfx_SetTr>:
     290:	90                   	nop
     291:	90                   	nop
     292:	90                   	nop
     293:	90                   	nop
     294:	90                   	nop
     295:	90                   	nop
     296:	90                   	nop
     297:	90                   	nop
     298:	90                   	nop
     299:	90                   	nop
     29a:	90                   	nop
     29b:	90                   	nop
     29c:	90                   	nop
     29d:	90                   	nop
     29e:	90                   	nop
     29f:	90                   	nop

00000000000002a0 <SetTr>:
     2a0:	0f 00 df             	ltr    %edi
     2a3:	31 ff                	xor    %edi,%edi
     2a5:	e9 00 00 00 00       	jmp    2aa <SetTr+0xa>
     2aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000002b0 <__pfx_GetIdtBase>:
     2b0:	90                   	nop
     2b1:	90                   	nop
     2b2:	90                   	nop
     2b3:	90                   	nop
     2b4:	90                   	nop
     2b5:	90                   	nop
     2b6:	90                   	nop
     2b7:	90                   	nop
     2b8:	90                   	nop
     2b9:	90                   	nop
     2ba:	90                   	nop
     2bb:	90                   	nop
     2bc:	90                   	nop
     2bd:	90                   	nop
     2be:	90                   	nop
     2bf:	90                   	nop

00000000000002c0 <GetIdtBase>:
     2c0:	48 8d 44 24 f6       	lea    -0xa(%rsp),%rax
     2c5:	0f 01 08             	sidt   (%rax)
     2c8:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
     2cd:	48 89 d0             	mov    %rdx,%rax
     2d0:	31 d2                	xor    %edx,%edx
     2d2:	e9 00 00 00 00       	jmp    2d7 <GetIdtBase+0x17>
     2d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     2de:	00 00 

00000000000002e0 <__pfx_GetIdtLimit>:
     2e0:	90                   	nop
     2e1:	90                   	nop
     2e2:	90                   	nop
     2e3:	90                   	nop
     2e4:	90                   	nop
     2e5:	90                   	nop
     2e6:	90                   	nop
     2e7:	90                   	nop
     2e8:	90                   	nop
     2e9:	90                   	nop
     2ea:	90                   	nop
     2eb:	90                   	nop
     2ec:	90                   	nop
     2ed:	90                   	nop
     2ee:	90                   	nop
     2ef:	90                   	nop

00000000000002f0 <GetIdtLimit>:
     2f0:	48 8d 44 24 f6       	lea    -0xa(%rsp),%rax
     2f5:	0f 01 08             	sidt   (%rax)
     2f8:	66 8b 54 24 f6       	mov    -0xa(%rsp),%dx
     2fd:	89 d0                	mov    %edx,%eax
     2ff:	31 d2                	xor    %edx,%edx
     301:	e9 00 00 00 00       	jmp    306 <GetIdtLimit+0x16>
     306:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     30d:	00 00 00 

0000000000000310 <__pfx_SetIdtr>:
     310:	90                   	nop
     311:	90                   	nop
     312:	90                   	nop
     313:	90                   	nop
     314:	90                   	nop
     315:	90                   	nop
     316:	90                   	nop
     317:	90                   	nop
     318:	90                   	nop
     319:	90                   	nop
     31a:	90                   	nop
     31b:	90                   	nop
     31c:	90                   	nop
     31d:	90                   	nop
     31e:	90                   	nop
     31f:	90                   	nop

0000000000000320 <SetIdtr>:
     320:	55                   	push   %rbp
     321:	48 89 e5             	mov    %rsp,%rbp
     324:	48 83 ec 08          	sub    $0x8,%rsp
     328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     32c:	0f 01 5d f8          	lidt   -0x8(%rbp)
     330:	c9                   	leave
     331:	31 ff                	xor    %edi,%edi
     333:	e9 00 00 00 00       	jmp    338 <SetIdtr+0x18>
     338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     33f:	00 

0000000000000340 <__pfx_GetRflags>:
     340:	90                   	nop
     341:	90                   	nop
     342:	90                   	nop
     343:	90                   	nop
     344:	90                   	nop
     345:	90                   	nop
     346:	90                   	nop
     347:	90                   	nop
     348:	90                   	nop
     349:	90                   	nop
     34a:	90                   	nop
     34b:	90                   	nop
     34c:	90                   	nop
     34d:	90                   	nop
     34e:	90                   	nop
     34f:	90                   	nop

0000000000000350 <GetRflags>:
     350:	9c                   	pushf
     351:	58                   	pop    %rax
     352:	e9 00 00 00 00       	jmp    357 <GetRflags+0x7>
     357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     35e:	00 00 

0000000000000360 <__pfx_SetRflags>:
     360:	90                   	nop
     361:	90                   	nop
     362:	90                   	nop
     363:	90                   	nop
     364:	90                   	nop
     365:	90                   	nop
     366:	90                   	nop
     367:	90                   	nop
     368:	90                   	nop
     369:	90                   	nop
     36a:	90                   	nop
     36b:	90                   	nop
     36c:	90                   	nop
     36d:	90                   	nop
     36e:	90                   	nop
     36f:	90                   	nop

0000000000000370 <SetRflags>:
     370:	57                   	push   %rdi
     371:	9d                   	popf
     372:	31 ff                	xor    %edi,%edi
     374:	e9 00 00 00 00       	jmp    379 <SetRflags+0x9>
     379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000380 <__pfx_read_msr>:
     380:	90                   	nop
     381:	90                   	nop
     382:	90                   	nop
     383:	90                   	nop
     384:	90                   	nop
     385:	90                   	nop
     386:	90                   	nop
     387:	90                   	nop
     388:	90                   	nop
     389:	90                   	nop
     38a:	90                   	nop
     38b:	90                   	nop
     38c:	90                   	nop
     38d:	90                   	nop
     38e:	90                   	nop
     38f:	90                   	nop

0000000000000390 <read_msr>:
     390:	48 89 f9             	mov    %rdi,%rcx
     393:	0f 32                	rdmsr
     395:	48 89 c7             	mov    %rax,%rdi
     398:	48 89 d6             	mov    %rdx,%rsi
     39b:	48 89 f0             	mov    %rsi,%rax
     39e:	48 c1 e0 20          	shl    $0x20,%rax
     3a2:	48 09 f8             	or     %rdi,%rax
     3a5:	31 d2                	xor    %edx,%edx
     3a7:	31 c9                	xor    %ecx,%ecx
     3a9:	31 f6                	xor    %esi,%esi
     3ab:	31 ff                	xor    %edi,%edi
     3ad:	e9 00 00 00 00       	jmp    3b2 <read_msr+0x22>
     3b2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     3b9:	00 00 00 00 
     3bd:	0f 1f 00             	nopl   (%rax)

00000000000003c0 <__pfx_write_msr>:
     3c0:	90                   	nop
     3c1:	90                   	nop
     3c2:	90                   	nop
     3c3:	90                   	nop
     3c4:	90                   	nop
     3c5:	90                   	nop
     3c6:	90                   	nop
     3c7:	90                   	nop
     3c8:	90                   	nop
     3c9:	90                   	nop
     3ca:	90                   	nop
     3cb:	90                   	nop
     3cc:	90                   	nop
     3cd:	90                   	nop
     3ce:	90                   	nop
     3cf:	90                   	nop

00000000000003d0 <write_msr>:
     3d0:	49 89 f8             	mov    %rdi,%r8
     3d3:	89 f7                	mov    %esi,%edi
     3d5:	48 c1 ee 20          	shr    $0x20,%rsi
     3d9:	48 89 f8             	mov    %rdi,%rax
     3dc:	48 89 f2             	mov    %rsi,%rdx
     3df:	4c 89 c1             	mov    %r8,%rcx
     3e2:	0f 30                	wrmsr
     3e4:	31 c0                	xor    %eax,%eax
     3e6:	31 d2                	xor    %edx,%edx
     3e8:	31 c9                	xor    %ecx,%ecx
     3ea:	31 f6                	xor    %esi,%esi
     3ec:	31 ff                	xor    %edi,%edi
     3ee:	45 31 c0             	xor    %r8d,%r8d
     3f1:	e9 00 00 00 00       	jmp    3f6 <write_msr+0x26>
     3f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     3fd:	00 00 00 

0000000000000400 <__pfx_readcr0>:
     400:	90                   	nop
     401:	90                   	nop
     402:	90                   	nop
     403:	90                   	nop
     404:	90                   	nop
     405:	90                   	nop
     406:	90                   	nop
     407:	90                   	nop
     408:	90                   	nop
     409:	90                   	nop
     40a:	90                   	nop
     40b:	90                   	nop
     40c:	90                   	nop
     40d:	90                   	nop
     40e:	90                   	nop
     40f:	90                   	nop

0000000000000410 <readcr0>:
     410:	0f 20 c0             	mov    %cr0,%rax
     413:	e9 00 00 00 00       	jmp    418 <readcr0+0x8>
     418:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     41f:	00 

0000000000000420 <__pfx_writecr0>:
     420:	90                   	nop
     421:	90                   	nop
     422:	90                   	nop
     423:	90                   	nop
     424:	90                   	nop
     425:	90                   	nop
     426:	90                   	nop
     427:	90                   	nop
     428:	90                   	nop
     429:	90                   	nop
     42a:	90                   	nop
     42b:	90                   	nop
     42c:	90                   	nop
     42d:	90                   	nop
     42e:	90                   	nop
     42f:	90                   	nop

0000000000000430 <writecr0>:
     430:	0f 22 c7             	mov    %rdi,%cr0
     433:	31 ff                	xor    %edi,%edi
     435:	e9 00 00 00 00       	jmp    43a <writecr0+0xa>
     43a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000440 <__pfx_readcr3>:
     440:	90                   	nop
     441:	90                   	nop
     442:	90                   	nop
     443:	90                   	nop
     444:	90                   	nop
     445:	90                   	nop
     446:	90                   	nop
     447:	90                   	nop
     448:	90                   	nop
     449:	90                   	nop
     44a:	90                   	nop
     44b:	90                   	nop
     44c:	90                   	nop
     44d:	90                   	nop
     44e:	90                   	nop
     44f:	90                   	nop

0000000000000450 <readcr3>:
     450:	0f 20 d8             	mov    %cr3,%rax
     453:	e9 00 00 00 00       	jmp    458 <readcr3+0x8>
     458:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     45f:	00 

0000000000000460 <__pfx_writecr3>:
     460:	90                   	nop
     461:	90                   	nop
     462:	90                   	nop
     463:	90                   	nop
     464:	90                   	nop
     465:	90                   	nop
     466:	90                   	nop
     467:	90                   	nop
     468:	90                   	nop
     469:	90                   	nop
     46a:	90                   	nop
     46b:	90                   	nop
     46c:	90                   	nop
     46d:	90                   	nop
     46e:	90                   	nop
     46f:	90                   	nop

0000000000000470 <writecr3>:
     470:	0f 22 df             	mov    %rdi,%cr3
     473:	31 ff                	xor    %edi,%edi
     475:	e9 00 00 00 00       	jmp    47a <writecr3+0xa>
     47a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000480 <__pfx_readcr4>:
     480:	90                   	nop
     481:	90                   	nop
     482:	90                   	nop
     483:	90                   	nop
     484:	90                   	nop
     485:	90                   	nop
     486:	90                   	nop
     487:	90                   	nop
     488:	90                   	nop
     489:	90                   	nop
     48a:	90                   	nop
     48b:	90                   	nop
     48c:	90                   	nop
     48d:	90                   	nop
     48e:	90                   	nop
     48f:	90                   	nop

0000000000000490 <readcr4>:
     490:	0f 20 e0             	mov    %cr4,%rax
     493:	e9 00 00 00 00       	jmp    498 <readcr4+0x8>
     498:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     49f:	00 

00000000000004a0 <__pfx_writecr4>:
     4a0:	90                   	nop
     4a1:	90                   	nop
     4a2:	90                   	nop
     4a3:	90                   	nop
     4a4:	90                   	nop
     4a5:	90                   	nop
     4a6:	90                   	nop
     4a7:	90                   	nop
     4a8:	90                   	nop
     4a9:	90                   	nop
     4aa:	90                   	nop
     4ab:	90                   	nop
     4ac:	90                   	nop
     4ad:	90                   	nop
     4ae:	90                   	nop
     4af:	90                   	nop

00000000000004b0 <writecr4>:
     4b0:	0f 22 e7             	mov    %rdi,%cr4
     4b3:	31 ff                	xor    %edi,%edi
     4b5:	e9 00 00 00 00       	jmp    4ba <writecr4+0xa>
     4ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000004c0 <__pfx_cpuidex>:
     4c0:	90                   	nop
     4c1:	90                   	nop
     4c2:	90                   	nop
     4c3:	90                   	nop
     4c4:	90                   	nop
     4c5:	90                   	nop
     4c6:	90                   	nop
     4c7:	90                   	nop
     4c8:	90                   	nop
     4c9:	90                   	nop
     4ca:	90                   	nop
     4cb:	90                   	nop
     4cc:	90                   	nop
     4cd:	90                   	nop
     4ce:	90                   	nop
     4cf:	90                   	nop

00000000000004d0 <cpuidex>:
     4d0:	e8 00 00 00 00       	call   4d5 <cpuidex+0x5>
     4d5:	55                   	push   %rbp
     4d6:	89 f0                	mov    %esi,%eax
     4d8:	89 d1                	mov    %edx,%ecx
     4da:	48 89 e5             	mov    %rsp,%rbp
     4dd:	53                   	push   %rbx
     4de:	0f a2                	cpuid
     4e0:	89 5f 04             	mov    %ebx,0x4(%rdi)
     4e3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     4e7:	89 07                	mov    %eax,(%rdi)
     4e9:	89 4f 08             	mov    %ecx,0x8(%rdi)
     4ec:	89 57 0c             	mov    %edx,0xc(%rdi)
     4ef:	c9                   	leave
     4f0:	31 c0                	xor    %eax,%eax
     4f2:	31 d2                	xor    %edx,%edx
     4f4:	31 c9                	xor    %ecx,%ecx
     4f6:	31 f6                	xor    %esi,%esi
     4f8:	31 ff                	xor    %edi,%edi
     4fa:	e9 00 00 00 00       	jmp    4ff <cpuidex+0x2f>
     4ff:	90                   	nop

0000000000000500 <__pfx_vmx_on>:
     500:	90                   	nop
     501:	90                   	nop
     502:	90                   	nop
     503:	90                   	nop
     504:	90                   	nop
     505:	90                   	nop
     506:	90                   	nop
     507:	90                   	nop
     508:	90                   	nop
     509:	90                   	nop
     50a:	90                   	nop
     50b:	90                   	nop
     50c:	90                   	nop
     50d:	90                   	nop
     50e:	90                   	nop
     50f:	90                   	nop

0000000000000510 <vmx_on>:
     510:	f3 0f c7 37          	vmxon  (%rdi)
     514:	31 ff                	xor    %edi,%edi
     516:	e9 00 00 00 00       	jmp    51b <vmx_on+0xb>
     51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000520 <__pfx_vmx_off>:
     520:	90                   	nop
     521:	90                   	nop
     522:	90                   	nop
     523:	90                   	nop
     524:	90                   	nop
     525:	90                   	nop
     526:	90                   	nop
     527:	90                   	nop
     528:	90                   	nop
     529:	90                   	nop
     52a:	90                   	nop
     52b:	90                   	nop
     52c:	90                   	nop
     52d:	90                   	nop
     52e:	90                   	nop
     52f:	90                   	nop

0000000000000530 <vmx_off>:
     530:	0f 01 c4             	vmxoff
     533:	e9 00 00 00 00       	jmp    538 <vmx_off+0x8>
     538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     53f:	00 

0000000000000540 <__pfx_vmx_vmptrst>:
     540:	90                   	nop
     541:	90                   	nop
     542:	90                   	nop
     543:	90                   	nop
     544:	90                   	nop
     545:	90                   	nop
     546:	90                   	nop
     547:	90                   	nop
     548:	90                   	nop
     549:	90                   	nop
     54a:	90                   	nop
     54b:	90                   	nop
     54c:	90                   	nop
     54d:	90                   	nop
     54e:	90                   	nop
     54f:	90                   	nop

0000000000000550 <vmx_vmptrst>:
     550:	55                   	push   %rbp
     551:	48 89 e5             	mov    %rsp,%rbp
     554:	48 83 ec 10          	sub    $0x10,%rsp
     558:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     55f:	00 00 
     561:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     565:	31 c0                	xor    %eax,%eax
     567:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
     56b:	0f c7 38             	vmptrst (%rax)
     56e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     572:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
     579:	00 00 
     57b:	75 08                	jne    585 <vmx_vmptrst+0x35>
     57d:	c9                   	leave
     57e:	31 c0                	xor    %eax,%eax
     580:	e9 00 00 00 00       	jmp    585 <vmx_vmptrst+0x35>
     585:	e8 00 00 00 00       	call   58a <vmx_vmptrst+0x3a>
     58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000590 <__pfx_vmx_vmptrld>:
     590:	90                   	nop
     591:	90                   	nop
     592:	90                   	nop
     593:	90                   	nop
     594:	90                   	nop
     595:	90                   	nop
     596:	90                   	nop
     597:	90                   	nop
     598:	90                   	nop
     599:	90                   	nop
     59a:	90                   	nop
     59b:	90                   	nop
     59c:	90                   	nop
     59d:	90                   	nop
     59e:	90                   	nop
     59f:	90                   	nop

00000000000005a0 <vmx_vmptrld>:
     5a0:	0f c7 37             	vmptrld (%rdi)
     5a3:	31 ff                	xor    %edi,%edi
     5a5:	e9 00 00 00 00       	jmp    5aa <vmx_vmptrld+0xa>
     5aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000005b0 <__pfx_vmx_vmclear>:
     5b0:	90                   	nop
     5b1:	90                   	nop
     5b2:	90                   	nop
     5b3:	90                   	nop
     5b4:	90                   	nop
     5b5:	90                   	nop
     5b6:	90                   	nop
     5b7:	90                   	nop
     5b8:	90                   	nop
     5b9:	90                   	nop
     5ba:	90                   	nop
     5bb:	90                   	nop
     5bc:	90                   	nop
     5bd:	90                   	nop
     5be:	90                   	nop
     5bf:	90                   	nop

00000000000005c0 <vmx_vmclear>:
     5c0:	55                   	push   %rbp
     5c1:	48 89 e5             	mov    %rsp,%rbp
     5c4:	48 83 ec 08          	sub    $0x8,%rsp
     5c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
     5cc:	66 0f c7 30          	vmclear (%rax)
     5d0:	c9                   	leave
     5d1:	31 c0                	xor    %eax,%eax
     5d3:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
     5d7:	0f 94 c0             	sete   %al
     5da:	31 ff                	xor    %edi,%edi
     5dc:	e9 00 00 00 00       	jmp    5e1 <vmx_vmclear+0x21>
     5e1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     5e8:	00 00 00 00 
     5ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005f0 <__pfx_vmx_vmread>:
     5f0:	90                   	nop
     5f1:	90                   	nop
     5f2:	90                   	nop
     5f3:	90                   	nop
     5f4:	90                   	nop
     5f5:	90                   	nop
     5f6:	90                   	nop
     5f7:	90                   	nop
     5f8:	90                   	nop
     5f9:	90                   	nop
     5fa:	90                   	nop
     5fb:	90                   	nop
     5fc:	90                   	nop
     5fd:	90                   	nop
     5fe:	90                   	nop
     5ff:	90                   	nop

0000000000000600 <vmx_vmread>:
     600:	48 89 f8             	mov    %rdi,%rax
     603:	0f 78 c7             	vmread %rax,%rdi
     606:	48 89 3e             	mov    %rdi,(%rsi)
     609:	31 c0                	xor    %eax,%eax
     60b:	31 f6                	xor    %esi,%esi
     60d:	31 ff                	xor    %edi,%edi
     60f:	e9 00 00 00 00       	jmp    614 <vmx_vmread+0x14>
     614:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     61b:	00 00 00 00 
     61f:	90                   	nop

0000000000000620 <__pfx_vmx_vmwrite>:
     620:	90                   	nop
     621:	90                   	nop
     622:	90                   	nop
     623:	90                   	nop
     624:	90                   	nop
     625:	90                   	nop
     626:	90                   	nop
     627:	90                   	nop
     628:	90                   	nop
     629:	90                   	nop
     62a:	90                   	nop
     62b:	90                   	nop
     62c:	90                   	nop
     62d:	90                   	nop
     62e:	90                   	nop
     62f:	90                   	nop

0000000000000630 <vmx_vmwrite>:
     630:	48 89 f8             	mov    %rdi,%rax
     633:	0f 79 c6             	vmwrite %rsi,%rax
     636:	31 c0                	xor    %eax,%eax
     638:	31 f6                	xor    %esi,%esi
     63a:	31 ff                	xor    %edi,%edi
     63c:	e9 00 00 00 00       	jmp    641 <vmx_vmwrite+0x11>
     641:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     648:	00 00 00 00 
     64c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000650 <__pfx_vmx_vmresume>:
     650:	90                   	nop
     651:	90                   	nop
     652:	90                   	nop
     653:	90                   	nop
     654:	90                   	nop
     655:	90                   	nop
     656:	90                   	nop
     657:	90                   	nop
     658:	90                   	nop
     659:	90                   	nop
     65a:	90                   	nop
     65b:	90                   	nop
     65c:	90                   	nop
     65d:	90                   	nop
     65e:	90                   	nop
     65f:	90                   	nop

0000000000000660 <vmx_vmresume>:
     660:	0f 01 c3             	vmresume
     663:	e9 00 00 00 00       	jmp    668 <vmx_vmresume+0x8>
     668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     66f:	00 

0000000000000670 <__pfx_vmx_vmlaunch>:
     670:	90                   	nop
     671:	90                   	nop
     672:	90                   	nop
     673:	90                   	nop
     674:	90                   	nop
     675:	90                   	nop
     676:	90                   	nop
     677:	90                   	nop
     678:	90                   	nop
     679:	90                   	nop
     67a:	90                   	nop
     67b:	90                   	nop
     67c:	90                   	nop
     67d:	90                   	nop
     67e:	90                   	nop
     67f:	90                   	nop

0000000000000680 <vmx_vmlaunch>:
     680:	0f 01 c2             	vmlaunch
     683:	e9 00 00 00 00       	jmp    688 <vmx_vmlaunch+0x8>
     688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     68f:	00 

0000000000000690 <__pfx_AsmEnableVmxOperation>:
     690:	90                   	nop
     691:	90                   	nop
     692:	90                   	nop
     693:	90                   	nop
     694:	90                   	nop
     695:	90                   	nop
     696:	90                   	nop
     697:	90                   	nop
     698:	90                   	nop
     699:	90                   	nop
     69a:	90                   	nop
     69b:	90                   	nop
     69c:	90                   	nop
     69d:	90                   	nop
     69e:	90                   	nop
     69f:	90                   	nop

00000000000006a0 <AsmEnableVmxOperation>:
     6a0:	0f 20 e0             	mov    %cr4,%rax
     6a3:	80 cc 20             	or     $0x20,%ah
     6a6:	0f 22 e0             	mov    %rax,%cr4
     6a9:	31 c0                	xor    %eax,%eax
     6ab:	e9 00 00 00 00       	jmp    6b0 <__pfx_VirtualToPhysicalAddress>

00000000000006b0 <__pfx_VirtualToPhysicalAddress>:
     6b0:	90                   	nop
     6b1:	90                   	nop
     6b2:	90                   	nop
     6b3:	90                   	nop
     6b4:	90                   	nop
     6b5:	90                   	nop
     6b6:	90                   	nop
     6b7:	90                   	nop
     6b8:	90                   	nop
     6b9:	90                   	nop
     6ba:	90                   	nop
     6bb:	90                   	nop
     6bc:	90                   	nop
     6bd:	90                   	nop
     6be:	90                   	nop
     6bf:	90                   	nop

00000000000006c0 <VirtualToPhysicalAddress>:
     6c0:	e8 00 00 00 00       	call   6c5 <VirtualToPhysicalAddress+0x5>
     6c5:	55                   	push   %rbp
     6c6:	b8 00 00 00 80       	mov    $0x80000000,%eax
     6cb:	48 89 e5             	mov    %rsp,%rbp
     6ce:	48 01 c7             	add    %rax,%rdi
     6d1:	72 19                	jb     6ec <VirtualToPhysicalAddress+0x2c>
     6d3:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
     6da:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 6e1 <VirtualToPhysicalAddress+0x21>
     6e1:	48 01 f8             	add    %rdi,%rax
     6e4:	5d                   	pop    %rbp
     6e5:	31 ff                	xor    %edi,%edi
     6e7:	e9 00 00 00 00       	jmp    6ec <VirtualToPhysicalAddress+0x2c>
     6ec:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 6f3 <VirtualToPhysicalAddress+0x33>
     6f3:	eb ec                	jmp    6e1 <VirtualToPhysicalAddress+0x21>
     6f5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     6fc:	00 00 00 00 

0000000000000700 <__pfx_PhysicalToVirtualAddress>:
     700:	90                   	nop
     701:	90                   	nop
     702:	90                   	nop
     703:	90                   	nop
     704:	90                   	nop
     705:	90                   	nop
     706:	90                   	nop
     707:	90                   	nop
     708:	90                   	nop
     709:	90                   	nop
     70a:	90                   	nop
     70b:	90                   	nop
     70c:	90                   	nop
     70d:	90                   	nop
     70e:	90                   	nop
     70f:	90                   	nop

0000000000000710 <PhysicalToVirtualAddress>:
     710:	e8 00 00 00 00       	call   715 <PhysicalToVirtualAddress+0x5>
     715:	55                   	push   %rbp
     716:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 71d <PhysicalToVirtualAddress+0xd>
     71d:	48 01 f8             	add    %rdi,%rax
     720:	48 89 e5             	mov    %rsp,%rbp
     723:	5d                   	pop    %rbp
     724:	31 ff                	xor    %edi,%edi
     726:	e9 00 00 00 00       	jmp    72b <PhysicalToVirtualAddress+0x1b>
     72b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000730 <__pfx_AllocateVMXonRegion>:
     730:	90                   	nop
     731:	90                   	nop
     732:	90                   	nop
     733:	90                   	nop
     734:	90                   	nop
     735:	90                   	nop
     736:	90                   	nop
     737:	90                   	nop
     738:	90                   	nop
     739:	90                   	nop
     73a:	90                   	nop
     73b:	90                   	nop
     73c:	90                   	nop
     73d:	90                   	nop
     73e:	90                   	nop
     73f:	90                   	nop

0000000000000740 <AllocateVMXonRegion>:
     740:	e8 00 00 00 00       	call   745 <AllocateVMXonRegion+0x5>
     745:	55                   	push   %rbp
     746:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     74b:	be c0 0d 00 00       	mov    $0xdc0,%esi
     750:	48 89 e5             	mov    %rsp,%rbp
     753:	41 56                	push   %r14
     755:	41 55                	push   %r13
     757:	49 89 fd             	mov    %rdi,%r13
     75a:	bf 00 30 00 00       	mov    $0x3000,%edi
     75f:	41 54                	push   %r12
     761:	53                   	push   %rbx
     762:	e8 00 00 00 00       	call   767 <AllocateVMXonRegion+0x27>
     767:	48 85 c0             	test   %rax,%rax
     76a:	0f 84 fb 00 00 00    	je     86b <AllocateVMXonRegion+0x12b>
     770:	4c 8d a0 ff 0f 00 00 	lea    0xfff(%rax),%r12
     777:	48 89 c6             	mov    %rax,%rsi
     77a:	48 ba ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rdx
     781:	ff ff ff 
     784:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 78b <AllocateVMXonRegion+0x4b>
     78b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
     792:	48 39 f2             	cmp    %rsi,%rdx
     795:	0f 83 b1 00 00 00    	jae    84c <AllocateVMXonRegion+0x10c>
     79b:	bb ff 0f 00 80       	mov    $0x80000fff,%ebx
     7a0:	48 01 f3             	add    %rsi,%rbx
     7a3:	48 01 c3             	add    %rax,%rbx
     7a6:	b8 00 00 00 80       	mov    $0x80000000,%eax
     7ab:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
     7b2:	4c 01 e0             	add    %r12,%rax
     7b5:	0f 82 a4 00 00 00    	jb     85f <AllocateVMXonRegion+0x11f>
     7bb:	48 c7 c2 00 00 00 80 	mov    $0xffffffff80000000,%rdx
     7c2:	48 2b 15 00 00 00 00 	sub    0x0(%rip),%rdx        # 7c9 <AllocateVMXonRegion+0x89>
     7c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     7d0:	4c 8d 34 10          	lea    (%rax,%rdx,1),%r14
     7d4:	e8 00 00 00 00       	call   7d9 <AllocateVMXonRegion+0x99>
     7d9:	4c 89 e6             	mov    %r12,%rsi
     7dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     7e3:	e8 00 00 00 00       	call   7e8 <AllocateVMXonRegion+0xa8>
     7e8:	48 89 de             	mov    %rbx,%rsi
     7eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     7f2:	e8 00 00 00 00       	call   7f7 <AllocateVMXonRegion+0xb7>
     7f7:	4c 89 f6             	mov    %r14,%rsi
     7fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     801:	e8 00 00 00 00       	call   806 <AllocateVMXonRegion+0xc6>
     806:	bf 80 04 00 00       	mov    $0x480,%edi
     80b:	e8 00 00 00 00       	call   810 <AllocateVMXonRegion+0xd0>
     810:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     817:	41 89 c6             	mov    %eax,%r14d
     81a:	41 81 e6 ff ff ff 7f 	and    $0x7fffffff,%r14d
     821:	44 89 f6             	mov    %r14d,%esi
     824:	e8 00 00 00 00       	call   829 <AllocateVMXonRegion+0xe9>
     829:	49 89 5d 00          	mov    %rbx,0x0(%r13)
     82d:	44 89 f0             	mov    %r14d,%eax
     830:	49 89 04 24          	mov    %rax,(%r12)
     834:	b8 01 00 00 00       	mov    $0x1,%eax
     839:	5b                   	pop    %rbx
     83a:	41 5c                	pop    %r12
     83c:	41 5d                	pop    %r13
     83e:	41 5e                	pop    %r14
     840:	5d                   	pop    %rbp
     841:	31 d2                	xor    %edx,%edx
     843:	31 f6                	xor    %esi,%esi
     845:	31 ff                	xor    %edi,%edi
     847:	e9 00 00 00 00       	jmp    84c <AllocateVMXonRegion+0x10c>
     84c:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
     853:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 85a <AllocateVMXonRegion+0x11a>
     85a:	e9 3c ff ff ff       	jmp    79b <AllocateVMXonRegion+0x5b>
     85f:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 866 <AllocateVMXonRegion+0x126>
     866:	e9 5e ff ff ff       	jmp    7c9 <AllocateVMXonRegion+0x89>
     86b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     872:	e8 00 00 00 00       	call   877 <AllocateVMXonRegion+0x137>
     877:	31 c0                	xor    %eax,%eax
     879:	eb be                	jmp    839 <AllocateVMXonRegion+0xf9>
     87b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000880 <__pfx_AllocateVmcsRegion>:
     880:	90                   	nop
     881:	90                   	nop
     882:	90                   	nop
     883:	90                   	nop
     884:	90                   	nop
     885:	90                   	nop
     886:	90                   	nop
     887:	90                   	nop
     888:	90                   	nop
     889:	90                   	nop
     88a:	90                   	nop
     88b:	90                   	nop
     88c:	90                   	nop
     88d:	90                   	nop
     88e:	90                   	nop
     88f:	90                   	nop

0000000000000890 <AllocateVmcsRegion>:
     890:	e8 00 00 00 00       	call   895 <AllocateVmcsRegion+0x5>
     895:	55                   	push   %rbp
     896:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     89b:	be c0 0d 00 00       	mov    $0xdc0,%esi
     8a0:	48 89 e5             	mov    %rsp,%rbp
     8a3:	41 56                	push   %r14
     8a5:	41 55                	push   %r13
     8a7:	49 89 fd             	mov    %rdi,%r13
     8aa:	bf 00 30 00 00       	mov    $0x3000,%edi
     8af:	41 54                	push   %r12
     8b1:	53                   	push   %rbx
     8b2:	e8 00 00 00 00       	call   8b7 <AllocateVmcsRegion+0x27>
     8b7:	48 85 c0             	test   %rax,%rax
     8ba:	0f 84 fb 00 00 00    	je     9bb <AllocateVmcsRegion+0x12b>
     8c0:	4c 8d a0 ff 0f 00 00 	lea    0xfff(%rax),%r12
     8c7:	48 89 c6             	mov    %rax,%rsi
     8ca:	48 ba ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rdx
     8d1:	ff ff ff 
     8d4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8db <AllocateVmcsRegion+0x4b>
     8db:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
     8e2:	48 39 f2             	cmp    %rsi,%rdx
     8e5:	0f 83 b1 00 00 00    	jae    99c <AllocateVmcsRegion+0x10c>
     8eb:	bb ff 0f 00 80       	mov    $0x80000fff,%ebx
     8f0:	48 01 f3             	add    %rsi,%rbx
     8f3:	48 01 c3             	add    %rax,%rbx
     8f6:	b8 00 00 00 80       	mov    $0x80000000,%eax
     8fb:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
     902:	4c 01 e0             	add    %r12,%rax
     905:	0f 82 a4 00 00 00    	jb     9af <AllocateVmcsRegion+0x11f>
     90b:	48 c7 c2 00 00 00 80 	mov    $0xffffffff80000000,%rdx
     912:	48 2b 15 00 00 00 00 	sub    0x0(%rip),%rdx        # 919 <AllocateVmcsRegion+0x89>
     919:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     920:	4c 8d 34 10          	lea    (%rax,%rdx,1),%r14
     924:	e8 00 00 00 00       	call   929 <AllocateVmcsRegion+0x99>
     929:	4c 89 e6             	mov    %r12,%rsi
     92c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     933:	e8 00 00 00 00       	call   938 <AllocateVmcsRegion+0xa8>
     938:	48 89 de             	mov    %rbx,%rsi
     93b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     942:	e8 00 00 00 00       	call   947 <AllocateVmcsRegion+0xb7>
     947:	4c 89 f6             	mov    %r14,%rsi
     94a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     951:	e8 00 00 00 00       	call   956 <AllocateVmcsRegion+0xc6>
     956:	bf 80 04 00 00       	mov    $0x480,%edi
     95b:	e8 00 00 00 00       	call   960 <AllocateVmcsRegion+0xd0>
     960:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     967:	41 89 c6             	mov    %eax,%r14d
     96a:	41 81 e6 ff ff ff 7f 	and    $0x7fffffff,%r14d
     971:	44 89 f6             	mov    %r14d,%esi
     974:	e8 00 00 00 00       	call   979 <AllocateVmcsRegion+0xe9>
     979:	49 89 5d 08          	mov    %rbx,0x8(%r13)
     97d:	44 89 f0             	mov    %r14d,%eax
     980:	49 89 04 24          	mov    %rax,(%r12)
     984:	b8 01 00 00 00       	mov    $0x1,%eax
     989:	5b                   	pop    %rbx
     98a:	41 5c                	pop    %r12
     98c:	41 5d                	pop    %r13
     98e:	41 5e                	pop    %r14
     990:	5d                   	pop    %rbp
     991:	31 d2                	xor    %edx,%edx
     993:	31 f6                	xor    %esi,%esi
     995:	31 ff                	xor    %edi,%edi
     997:	e9 00 00 00 00       	jmp    99c <AllocateVmcsRegion+0x10c>
     99c:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
     9a3:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 9aa <AllocateVmcsRegion+0x11a>
     9aa:	e9 3c ff ff ff       	jmp    8eb <AllocateVmcsRegion+0x5b>
     9af:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 9b6 <AllocateVmcsRegion+0x126>
     9b6:	e9 5e ff ff ff       	jmp    919 <AllocateVmcsRegion+0x89>
     9bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     9c2:	e8 00 00 00 00       	call   9c7 <AllocateVmcsRegion+0x137>
     9c7:	31 c0                	xor    %eax,%eax
     9c9:	eb be                	jmp    989 <AllocateVmcsRegion+0xf9>
     9cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000009d0 <__pfx_AllocateVmmStack>:
     9d0:	90                   	nop
     9d1:	90                   	nop
     9d2:	90                   	nop
     9d3:	90                   	nop
     9d4:	90                   	nop
     9d5:	90                   	nop
     9d6:	90                   	nop
     9d7:	90                   	nop
     9d8:	90                   	nop
     9d9:	90                   	nop
     9da:	90                   	nop
     9db:	90                   	nop
     9dc:	90                   	nop
     9dd:	90                   	nop
     9de:	90                   	nop
     9df:	90                   	nop

00000000000009e0 <AllocateVmmStack>:
     9e0:	e8 00 00 00 00       	call   9e5 <AllocateVmmStack+0x5>
     9e5:	55                   	push   %rbp
     9e6:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     9eb:	be c0 0d 00 00       	mov    $0xdc0,%esi
     9f0:	48 89 e5             	mov    %rsp,%rbp
     9f3:	53                   	push   %rbx
     9f4:	48 89 fb             	mov    %rdi,%rbx
     9f7:	bf 00 80 00 00       	mov    $0x8000,%edi
     9fc:	48 83 ec 10          	sub    $0x10,%rsp
     a00:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     a07:	00 00 
     a09:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     a0d:	31 c0                	xor    %eax,%eax
     a0f:	e8 00 00 00 00       	call   a14 <AllocateVmmStack+0x34>
     a14:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
     a18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     a1f:	48 89 43 18          	mov    %rax,0x18(%rbx)
     a23:	48 89 c6             	mov    %rax,%rsi
     a26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     a2a:	e8 00 00 00 00       	call   a2f <AllocateVmmStack+0x4f>
     a2f:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
     a34:	b8 01 00 00 00       	mov    $0x1,%eax
     a39:	74 1f                	je     a5a <AllocateVmmStack+0x7a>
     a3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     a3f:	65 48 2b 14 25 28 00 	sub    %gs:0x28,%rdx
     a46:	00 00 
     a48:	75 20                	jne    a6a <AllocateVmmStack+0x8a>
     a4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     a4e:	c9                   	leave
     a4f:	31 d2                	xor    %edx,%edx
     a51:	31 f6                	xor    %esi,%esi
     a53:	31 ff                	xor    %edi,%edi
     a55:	e9 00 00 00 00       	jmp    a5a <AllocateVmmStack+0x7a>
     a5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     a61:	e8 00 00 00 00       	call   a66 <AllocateVmmStack+0x86>
     a66:	31 c0                	xor    %eax,%eax
     a68:	eb d1                	jmp    a3b <AllocateVmmStack+0x5b>
     a6a:	e8 00 00 00 00       	call   a6f <AllocateVmmStack+0x8f>
     a6f:	90                   	nop

0000000000000a70 <__pfx_AllocateMsrBitmap>:
     a70:	90                   	nop
     a71:	90                   	nop
     a72:	90                   	nop
     a73:	90                   	nop
     a74:	90                   	nop
     a75:	90                   	nop
     a76:	90                   	nop
     a77:	90                   	nop
     a78:	90                   	nop
     a79:	90                   	nop
     a7a:	90                   	nop
     a7b:	90                   	nop
     a7c:	90                   	nop
     a7d:	90                   	nop
     a7e:	90                   	nop
     a7f:	90                   	nop

0000000000000a80 <AllocateMsrBitmap>:
     a80:	e8 00 00 00 00       	call   a85 <AllocateMsrBitmap+0x5>
     a85:	55                   	push   %rbp
     a86:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     a8b:	be c0 0d 00 00       	mov    $0xdc0,%esi
     a90:	48 89 e5             	mov    %rsp,%rbp
     a93:	53                   	push   %rbx
     a94:	48 89 fb             	mov    %rdi,%rbx
     a97:	bf 00 10 00 00       	mov    $0x1000,%edi
     a9c:	e8 00 00 00 00       	call   aa1 <AllocateMsrBitmap+0x21>
     aa1:	48 89 43 20          	mov    %rax,0x20(%rbx)
     aa5:	48 85 c0             	test   %rax,%rax
     aa8:	74 3d                	je     ae7 <AllocateMsrBitmap+0x67>
     aaa:	ba 00 00 00 80       	mov    $0x80000000,%edx
     aaf:	48 01 d0             	add    %rdx,%rax
     ab2:	72 2a                	jb     ade <AllocateMsrBitmap+0x5e>
     ab4:	48 c7 c2 00 00 00 80 	mov    $0xffffffff80000000,%rdx
     abb:	48 2b 15 00 00 00 00 	sub    0x0(%rip),%rdx        # ac2 <AllocateMsrBitmap+0x42>
     ac2:	48 01 d0             	add    %rdx,%rax
     ac5:	48 89 43 28          	mov    %rax,0x28(%rbx)
     ac9:	b8 01 00 00 00       	mov    $0x1,%eax
     ace:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     ad2:	c9                   	leave
     ad3:	31 d2                	xor    %edx,%edx
     ad5:	31 f6                	xor    %esi,%esi
     ad7:	31 ff                	xor    %edi,%edi
     ad9:	e9 00 00 00 00       	jmp    ade <AllocateMsrBitmap+0x5e>
     ade:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # ae5 <AllocateMsrBitmap+0x65>
     ae5:	eb db                	jmp    ac2 <AllocateMsrBitmap+0x42>
     ae7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     aee:	e8 00 00 00 00       	call   af3 <AllocateMsrBitmap+0x73>
     af3:	31 c0                	xor    %eax,%eax
     af5:	eb d7                	jmp    ace <AllocateMsrBitmap+0x4e>
     af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     afe:	00 00 

0000000000000b00 <AsmVmexitHandler>:
     b00:	41 57                	push   %r15
     b02:	41 56                	push   %r14
     b04:	41 55                	push   %r13
     b06:	41 54                	push   %r12
     b08:	41 53                	push   %r11
     b0a:	41 52                	push   %r10
     b0c:	41 51                	push   %r9
     b0e:	41 50                	push   %r8
     b10:	57                   	push   %rdi
     b11:	56                   	push   %rsi
     b12:	55                   	push   %rbp
     b13:	55                   	push   %rbp
     b14:	53                   	push   %rbx
     b15:	52                   	push   %rdx
     b16:	51                   	push   %rcx
     b17:	50                   	push   %rax
     b18:	48 89 e7             	mov    %rsp,%rdi
     b1b:	48 83 ec 20          	sub    $0x20,%rsp
     b1f:	e8 00 00 00 00       	call   b24 <AsmVmexitHandler+0x24>
     b24:	48 83 c4 20          	add    $0x20,%rsp
     b28:	3c 00                	cmp    $0x0,%al
     b2a:	0f 85 b0 00 00 00    	jne    be0 <VmxoffHandler>
     b30:	58                   	pop    %rax
     b31:	59                   	pop    %rcx
     b32:	5a                   	pop    %rdx
     b33:	5b                   	pop    %rbx
     b34:	5d                   	pop    %rbp
     b35:	5d                   	pop    %rbp
     b36:	5e                   	pop    %rsi
     b37:	5f                   	pop    %rdi
     b38:	41 58                	pop    %r8
     b3a:	41 59                	pop    %r9
     b3c:	41 5a                	pop    %r10
     b3e:	41 5b                	pop    %r11
     b40:	41 5c                	pop    %r12
     b42:	41 5d                	pop    %r13
     b44:	41 5e                	pop    %r14
     b46:	41 5f                	pop    %r15
     b48:	48 83 ec 20          	sub    $0x20,%rsp
     b4c:	e9 00 00 00 00       	jmp    b51 <AsmVmexitHandler+0x51>
     b51:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     b58:	00 00 00 00 
     b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b60 <AsmVmxSaveState>:
     b60:	50                   	push   %rax
     b61:	51                   	push   %rcx
     b62:	52                   	push   %rdx
     b63:	53                   	push   %rbx
     b64:	55                   	push   %rbp
     b65:	55                   	push   %rbp
     b66:	56                   	push   %rsi
     b67:	57                   	push   %rdi
     b68:	41 50                	push   %r8
     b6a:	41 51                	push   %r9
     b6c:	41 52                	push   %r10
     b6e:	41 53                	push   %r11
     b70:	41 54                	push   %r12
     b72:	41 55                	push   %r13
     b74:	41 56                	push   %r14
     b76:	41 57                	push   %r15
     b78:	48 83 ec 20          	sub    $0x20,%rsp
     b7c:	48 89 e6             	mov    %rsp,%rsi
     b7f:	e8 00 00 00 00       	call   b84 <AsmVmxSaveState+0x24>
     b84:	48 83 c4 20          	add    $0x20,%rsp
     b88:	41 5f                	pop    %r15
     b8a:	41 5e                	pop    %r14
     b8c:	41 5d                	pop    %r13
     b8e:	41 5c                	pop    %r12
     b90:	41 5b                	pop    %r11
     b92:	41 5a                	pop    %r10
     b94:	41 59                	pop    %r9
     b96:	41 58                	pop    %r8
     b98:	5f                   	pop    %rdi
     b99:	5e                   	pop    %rsi
     b9a:	5d                   	pop    %rbp
     b9b:	5d                   	pop    %rbp
     b9c:	5b                   	pop    %rbx
     b9d:	5a                   	pop    %rdx
     b9e:	59                   	pop    %rcx
     b9f:	58                   	pop    %rax
     ba0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
     ba7:	e9 00 00 00 00       	jmp    bac <AsmVmxSaveState+0x4c>
     bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000bb0 <AsmVmxRestoreState>:
     bb0:	48 83 c4 20          	add    $0x20,%rsp
     bb4:	41 5f                	pop    %r15
     bb6:	41 5e                	pop    %r14
     bb8:	41 5d                	pop    %r13
     bba:	41 5c                	pop    %r12
     bbc:	41 5b                	pop    %r11
     bbe:	41 5a                	pop    %r10
     bc0:	41 59                	pop    %r9
     bc2:	41 58                	pop    %r8
     bc4:	5f                   	pop    %rdi
     bc5:	5e                   	pop    %rsi
     bc6:	5d                   	pop    %rbp
     bc7:	5d                   	pop    %rbp
     bc8:	5b                   	pop    %rbx
     bc9:	5a                   	pop    %rdx
     bca:	59                   	pop    %rcx
     bcb:	58                   	pop    %rax
     bcc:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
     bd3:	e9 00 00 00 00       	jmp    bd8 <AsmVmxRestoreState+0x28>
     bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     bdf:	00 

0000000000000be0 <VmxoffHandler>:
     be0:	0f 01 c4             	vmxoff
     be3:	58                   	pop    %rax
     be4:	59                   	pop    %rcx
     be5:	5a                   	pop    %rdx
     be6:	5b                   	pop    %rbx
     be7:	5d                   	pop    %rbp
     be8:	5d                   	pop    %rbp
     be9:	5e                   	pop    %rsi
     bea:	5f                   	pop    %rdi
     beb:	41 58                	pop    %r8
     bed:	41 59                	pop    %r9
     bef:	41 5a                	pop    %r10
     bf1:	41 5b                	pop    %r11
     bf3:	41 5c                	pop    %r12
     bf5:	41 5d                	pop    %r13
     bf7:	41 5e                	pop    %r14
     bf9:	41 5f                	pop    %r15
     bfb:	48 8b 24 25 00 00 00 	mov    0x0,%rsp
     c02:	00 
     c03:	e9 00 00 00 00       	jmp    c08 <VmxoffHandler+0x28>
     c08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     c0f:	00 

0000000000000c10 <__pfx_AsmSetCs>:
     c10:	90                   	nop
     c11:	90                   	nop
     c12:	90                   	nop
     c13:	90                   	nop
     c14:	90                   	nop
     c15:	90                   	nop
     c16:	90                   	nop
     c17:	90                   	nop
     c18:	90                   	nop
     c19:	90                   	nop
     c1a:	90                   	nop
     c1b:	90                   	nop
     c1c:	90                   	nop
     c1d:	90                   	nop
     c1e:	90                   	nop
     c1f:	90                   	nop

0000000000000c20 <AsmSetCs>:
     c20:	8e cf                	mov    %edi,%cs
     c22:	e9 00 00 00 00       	jmp    c27 <AsmSetCs+0x7>
     c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     c2e:	00 00 

0000000000000c30 <__pfx_SetHostStateFromGuest>:
     c30:	90                   	nop
     c31:	90                   	nop
     c32:	90                   	nop
     c33:	90                   	nop
     c34:	90                   	nop
     c35:	90                   	nop
     c36:	90                   	nop
     c37:	90                   	nop
     c38:	90                   	nop
     c39:	90                   	nop
     c3a:	90                   	nop
     c3b:	90                   	nop
     c3c:	90                   	nop
     c3d:	90                   	nop
     c3e:	90                   	nop
     c3f:	90                   	nop

0000000000000c40 <SetHostStateFromGuest>:
     c40:	e8 00 00 00 00       	call   c45 <SetHostStateFromGuest+0x5>
     c45:	55                   	push   %rbp
     c46:	bf 00 08 00 00       	mov    $0x800,%edi
     c4b:	48 89 e5             	mov    %rsp,%rbp
     c4e:	41 57                	push   %r15
     c50:	41 56                	push   %r14
     c52:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
     c56:	41 55                	push   %r13
     c58:	41 54                	push   %r12
     c5a:	53                   	push   %rbx
     c5b:	48 83 ec 60          	sub    $0x60,%rsp
     c5f:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     c66:	00 00 
     c68:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     c6c:	31 c0                	xor    %eax,%eax
     c6e:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
     c75:	00 
     c76:	e8 00 00 00 00       	call   c7b <SetHostStateFromGuest+0x3b>
     c7b:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
     c7f:	e8 00 00 00 00       	call   c84 <SetHostStateFromGuest+0x44>
     c84:	48 8d 75 88          	lea    -0x78(%rbp),%rsi
     c88:	bf 02 08 00 00       	mov    $0x802,%edi
     c8d:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
     c94:	00 
     c95:	e8 00 00 00 00       	call   c9a <SetHostStateFromGuest+0x5a>
     c9a:	bf 11 27 00 00       	mov    $0x2711,%edi
     c9f:	e8 00 00 00 00       	call   ca4 <SetHostStateFromGuest+0x64>
     ca4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     cab:	48 89 c6             	mov    %rax,%rsi
     cae:	e8 00 00 00 00       	call   cb3 <SetHostStateFromGuest+0x73>
     cb3:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
     cb7:	bf 04 08 00 00       	mov    $0x804,%edi
     cbc:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
     cc3:	00 
     cc4:	e8 00 00 00 00       	call   cc9 <SetHostStateFromGuest+0x89>
     cc9:	48 8d 75 98          	lea    -0x68(%rbp),%rsi
     ccd:	bf 06 08 00 00       	mov    $0x806,%edi
     cd2:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
     cd9:	00 
     cda:	e8 00 00 00 00       	call   cdf <SetHostStateFromGuest+0x9f>
     cdf:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
     ce3:	bf 08 08 00 00       	mov    $0x808,%edi
     ce8:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
     cef:	00 
     cf0:	e8 00 00 00 00       	call   cf5 <SetHostStateFromGuest+0xb5>
     cf5:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
     cf9:	e8 00 00 00 00       	call   cfe <SetHostStateFromGuest+0xbe>
     cfe:	48 8d 75 a8          	lea    -0x58(%rbp),%rsi
     d02:	bf 0a 08 00 00       	mov    $0x80a,%edi
     d07:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
     d0e:	00 
     d0f:	e8 00 00 00 00       	call   d14 <SetHostStateFromGuest+0xd4>
     d14:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
     d18:	bf 0e 08 00 00       	mov    $0x80e,%edi
     d1d:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
     d24:	00 
     d25:	e8 00 00 00 00       	call   d2a <SetHostStateFromGuest+0xea>
     d2a:	e8 00 00 00 00       	call   d2f <SetHostStateFromGuest+0xef>
     d2f:	48 89 c3             	mov    %rax,%rbx
     d32:	e8 00 00 00 00       	call   d37 <SetHostStateFromGuest+0xf7>
     d37:	49 89 c7             	mov    %rax,%r15
     d3a:	e8 00 00 00 00       	call   d3f <SetHostStateFromGuest+0xff>
     d3f:	49 89 c6             	mov    %rax,%r14
     d42:	e8 00 00 00 00       	call   d47 <SetHostStateFromGuest+0x107>
     d47:	49 89 c5             	mov    %rax,%r13
     d4a:	e8 00 00 00 00       	call   d4f <SetHostStateFromGuest+0x10f>
     d4f:	49 89 c4             	mov    %rax,%r12
     d52:	e8 00 00 00 00       	call   d57 <SetHostStateFromGuest+0x117>
     d57:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
     d5e:	e8 00 00 00 00       	call   d63 <SetHostStateFromGuest+0x123>
     d63:	4d 89 f1             	mov    %r14,%r9
     d66:	4d 89 e8             	mov    %r13,%r8
     d69:	4c 89 e1             	mov    %r12,%rcx
     d6c:	53                   	push   %rbx
     d6d:	48 89 c6             	mov    %rax,%rsi
     d70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     d77:	41 57                	push   %r15
     d79:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
     d80:	e8 00 00 00 00       	call   d85 <SetHostStateFromGuest+0x145>
     d85:	ff 75 b0             	push   -0x50(%rbp)
     d88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     d8f:	ff 75 90             	push   -0x70(%rbp)
     d92:	4c 8b 4d a8          	mov    -0x58(%rbp),%r9
     d96:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
     d9a:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
     d9e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
     da2:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
     da6:	e8 00 00 00 00       	call   dab <SetHostStateFromGuest+0x16b>
     dab:	48 83 c4 20          	add    $0x20,%rsp
     daf:	e8 00 00 00 00       	call   db4 <SetHostStateFromGuest+0x174>
     db4:	bf 00 6c 00 00       	mov    $0x6c00,%edi
     db9:	48 89 c6             	mov    %rax,%rsi
     dbc:	e8 00 00 00 00       	call   dc1 <SetHostStateFromGuest+0x181>
     dc1:	e8 00 00 00 00       	call   dc6 <SetHostStateFromGuest+0x186>
     dc6:	bf 02 6c 00 00       	mov    $0x6c02,%edi
     dcb:	48 89 c6             	mov    %rax,%rsi
     dce:	e8 00 00 00 00       	call   dd3 <SetHostStateFromGuest+0x193>
     dd3:	e8 00 00 00 00       	call   dd8 <SetHostStateFromGuest+0x198>
     dd8:	bf 04 6c 00 00       	mov    $0x6c04,%edi
     ddd:	48 89 c6             	mov    %rax,%rsi
     de0:	e8 00 00 00 00       	call   de5 <SetHostStateFromGuest+0x1a5>
     de5:	48 8d 75 b8          	lea    -0x48(%rbp),%rsi
     de9:	bf 00 68 00 00       	mov    $0x6800,%edi
     dee:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
     df5:	00 
     df6:	e8 00 00 00 00       	call   dfb <SetHostStateFromGuest+0x1bb>
     dfb:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
     dff:	e8 00 00 00 00       	call   e04 <SetHostStateFromGuest+0x1c4>
     e04:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
     e08:	bf 02 68 00 00       	mov    $0x6802,%edi
     e0d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
     e14:	00 
     e15:	e8 00 00 00 00       	call   e1a <SetHostStateFromGuest+0x1da>
     e1a:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
     e1e:	e8 00 00 00 00       	call   e23 <SetHostStateFromGuest+0x1e3>
     e23:	bf 04 68 00 00       	mov    $0x6804,%edi
     e28:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
     e2c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
     e33:	00 
     e34:	e8 00 00 00 00       	call   e39 <SetHostStateFromGuest+0x1f9>
     e39:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
     e3d:	e8 00 00 00 00       	call   e42 <SetHostStateFromGuest+0x202>
     e42:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     e46:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
     e4d:	00 00 
     e4f:	75 23                	jne    e74 <SetHostStateFromGuest+0x234>
     e51:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     e55:	5b                   	pop    %rbx
     e56:	41 5c                	pop    %r12
     e58:	41 5d                	pop    %r13
     e5a:	41 5e                	pop    %r14
     e5c:	41 5f                	pop    %r15
     e5e:	5d                   	pop    %rbp
     e5f:	31 c0                	xor    %eax,%eax
     e61:	31 d2                	xor    %edx,%edx
     e63:	31 c9                	xor    %ecx,%ecx
     e65:	31 f6                	xor    %esi,%esi
     e67:	31 ff                	xor    %edi,%edi
     e69:	45 31 c0             	xor    %r8d,%r8d
     e6c:	45 31 c9             	xor    %r9d,%r9d
     e6f:	e9 00 00 00 00       	jmp    e74 <SetHostStateFromGuest+0x234>
     e74:	e8 00 00 00 00       	call   e79 <SetHostStateFromGuest+0x239>
     e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000e80 <__pfx_GetSegmentDescriptor.part.0>:
     e80:	90                   	nop
     e81:	90                   	nop
     e82:	90                   	nop
     e83:	90                   	nop
     e84:	90                   	nop
     e85:	90                   	nop
     e86:	90                   	nop
     e87:	90                   	nop
     e88:	90                   	nop
     e89:	90                   	nop
     e8a:	90                   	nop
     e8b:	90                   	nop
     e8c:	90                   	nop
     e8d:	90                   	nop
     e8e:	90                   	nop
     e8f:	90                   	nop

0000000000000e90 <GetSegmentDescriptor.part.0>:
     e90:	e8 00 00 00 00       	call   e95 <GetSegmentDescriptor.part.0+0x5>
     e95:	48 89 d0             	mov    %rdx,%rax
     e98:	89 f2                	mov    %esi,%edx
     e9a:	55                   	push   %rbp
     e9b:	81 e2 f8 ff 00 00    	and    $0xfff8,%edx
     ea1:	66 89 37             	mov    %si,(%rdi)
     ea4:	48 01 d0             	add    %rdx,%rax
     ea7:	0f b6 70 04          	movzbl 0x4(%rax),%esi
     eab:	0f b6 50 07          	movzbl 0x7(%rax),%edx
     eaf:	48 89 e5             	mov    %rsp,%rbp
     eb2:	c1 e2 18             	shl    $0x18,%edx
     eb5:	c1 e6 10             	shl    $0x10,%esi
     eb8:	09 d6                	or     %edx,%esi
     eba:	0f b7 50 02          	movzwl 0x2(%rax),%edx
     ebe:	09 d6                	or     %edx,%esi
     ec0:	48 63 d6             	movslq %esi,%rdx
     ec3:	48 89 57 08          	mov    %rdx,0x8(%rdi)
     ec7:	0f b6 50 06          	movzbl 0x6(%rax),%edx
     ecb:	0f b7 08             	movzwl (%rax),%ecx
     ece:	83 e2 0f             	and    $0xf,%edx
     ed1:	c1 e2 10             	shl    $0x10,%edx
     ed4:	09 ca                	or     %ecx,%edx
     ed6:	89 57 04             	mov    %edx,0x4(%rdi)
     ed9:	0f b6 48 06          	movzbl 0x6(%rax),%ecx
     edd:	44 0f b6 40 05       	movzbl 0x5(%rax),%r8d
     ee2:	66 81 e1 f0 00       	and    $0xf0,%cx
     ee7:	c1 e1 04             	shl    $0x4,%ecx
     eea:	44 09 c1             	or     %r8d,%ecx
     eed:	66 89 4f 02          	mov    %cx,0x2(%rdi)
     ef1:	f6 40 05 10          	testb  $0x10,0x5(%rax)
     ef5:	75 11                	jne    f08 <GetSegmentDescriptor.part.0+0x78>
     ef7:	48 8b 40 08          	mov    0x8(%rax),%rax
     efb:	89 f6                	mov    %esi,%esi
     efd:	48 c1 e0 20          	shl    $0x20,%rax
     f01:	48 09 f0             	or     %rsi,%rax
     f04:	48 89 47 08          	mov    %rax,0x8(%rdi)
     f08:	66 c1 e9 0b          	shr    $0xb,%cx
     f0c:	74 0c                	je     f1a <GetSegmentDescriptor.part.0+0x8a>
     f0e:	c1 e2 0c             	shl    $0xc,%edx
     f11:	81 c2 ff 0f 00 00    	add    $0xfff,%edx
     f17:	89 57 04             	mov    %edx,0x4(%rdi)
     f1a:	b8 01 00 00 00       	mov    $0x1,%eax
     f1f:	5d                   	pop    %rbp
     f20:	31 d2                	xor    %edx,%edx
     f22:	31 c9                	xor    %ecx,%ecx
     f24:	31 f6                	xor    %esi,%esi
     f26:	31 ff                	xor    %edi,%edi
     f28:	45 31 c0             	xor    %r8d,%r8d
     f2b:	e9 00 00 00 00       	jmp    f30 <__pfx_ClearVmcsState>

0000000000000f30 <__pfx_ClearVmcsState>:
     f30:	90                   	nop
     f31:	90                   	nop
     f32:	90                   	nop
     f33:	90                   	nop
     f34:	90                   	nop
     f35:	90                   	nop
     f36:	90                   	nop
     f37:	90                   	nop
     f38:	90                   	nop
     f39:	90                   	nop
     f3a:	90                   	nop
     f3b:	90                   	nop
     f3c:	90                   	nop
     f3d:	90                   	nop
     f3e:	90                   	nop
     f3f:	90                   	nop

0000000000000f40 <ClearVmcsState>:
     f40:	e8 00 00 00 00       	call   f45 <ClearVmcsState+0x5>
     f45:	55                   	push   %rbp
     f46:	48 89 e5             	mov    %rsp,%rbp
     f49:	53                   	push   %rbx
     f4a:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
     f4e:	e8 00 00 00 00       	call   f53 <ClearVmcsState+0x13>
     f53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     f5a:	89 c3                	mov    %eax,%ebx
     f5c:	89 c6                	mov    %eax,%esi
     f5e:	e8 00 00 00 00       	call   f63 <ClearVmcsState+0x23>
     f63:	b8 01 00 00 00       	mov    $0x1,%eax
     f68:	85 db                	test   %ebx,%ebx
     f6a:	75 0e                	jne    f7a <ClearVmcsState+0x3a>
     f6c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     f70:	c9                   	leave
     f71:	31 f6                	xor    %esi,%esi
     f73:	31 ff                	xor    %edi,%edi
     f75:	e9 00 00 00 00       	jmp    f7a <ClearVmcsState+0x3a>
     f7a:	89 de                	mov    %ebx,%esi
     f7c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     f83:	e8 00 00 00 00       	call   f88 <ClearVmcsState+0x48>
     f88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     f8c:	31 c0                	xor    %eax,%eax
     f8e:	c9                   	leave
     f8f:	31 f6                	xor    %esi,%esi
     f91:	31 ff                	xor    %edi,%edi
     f93:	e9 00 00 00 00       	jmp    f98 <ClearVmcsState+0x58>
     f98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f9f:	00 

0000000000000fa0 <__pfx_LoadVmcs>:
     fa0:	90                   	nop
     fa1:	90                   	nop
     fa2:	90                   	nop
     fa3:	90                   	nop
     fa4:	90                   	nop
     fa5:	90                   	nop
     fa6:	90                   	nop
     fa7:	90                   	nop
     fa8:	90                   	nop
     fa9:	90                   	nop
     faa:	90                   	nop
     fab:	90                   	nop
     fac:	90                   	nop
     fad:	90                   	nop
     fae:	90                   	nop
     faf:	90                   	nop

0000000000000fb0 <LoadVmcs>:
     fb0:	e8 00 00 00 00       	call   fb5 <LoadVmcs+0x5>
     fb5:	55                   	push   %rbp
     fb6:	48 83 c7 08          	add    $0x8,%rdi
     fba:	48 89 e5             	mov    %rsp,%rbp
     fbd:	e8 00 00 00 00       	call   fc2 <LoadVmcs+0x12>
     fc2:	b8 01 00 00 00       	mov    $0x1,%eax
     fc7:	5d                   	pop    %rbp
     fc8:	31 ff                	xor    %edi,%edi
     fca:	e9 00 00 00 00       	jmp    fcf <LoadVmcs+0x1f>
     fcf:	90                   	nop

0000000000000fd0 <__pfx_GetSegmentDescriptor>:
     fd0:	90                   	nop
     fd1:	90                   	nop
     fd2:	90                   	nop
     fd3:	90                   	nop
     fd4:	90                   	nop
     fd5:	90                   	nop
     fd6:	90                   	nop
     fd7:	90                   	nop
     fd8:	90                   	nop
     fd9:	90                   	nop
     fda:	90                   	nop
     fdb:	90                   	nop
     fdc:	90                   	nop
     fdd:	90                   	nop
     fde:	90                   	nop
     fdf:	90                   	nop

0000000000000fe0 <GetSegmentDescriptor>:
     fe0:	e8 00 00 00 00       	call   fe5 <GetSegmentDescriptor+0x5>
     fe5:	31 c0                	xor    %eax,%eax
     fe7:	48 85 ff             	test   %rdi,%rdi
     fea:	74 29                	je     1015 <GetSegmentDescriptor+0x35>
     fec:	40 f6 c6 04          	test   $0x4,%sil
     ff0:	75 18                	jne    100a <GetSegmentDescriptor+0x2a>
     ff2:	55                   	push   %rbp
     ff3:	0f b7 f6             	movzwl %si,%esi
     ff6:	48 89 e5             	mov    %rsp,%rbp
     ff9:	e8 92 fe ff ff       	call   e90 <GetSegmentDescriptor.part.0>
     ffe:	5d                   	pop    %rbp
     fff:	31 d2                	xor    %edx,%edx
    1001:	31 f6                	xor    %esi,%esi
    1003:	31 ff                	xor    %edi,%edi
    1005:	e9 00 00 00 00       	jmp    100a <GetSegmentDescriptor+0x2a>
    100a:	31 d2                	xor    %edx,%edx
    100c:	31 f6                	xor    %esi,%esi
    100e:	31 ff                	xor    %edi,%edi
    1010:	e9 00 00 00 00       	jmp    1015 <GetSegmentDescriptor+0x35>
    1015:	31 d2                	xor    %edx,%edx
    1017:	31 f6                	xor    %esi,%esi
    1019:	31 ff                	xor    %edi,%edi
    101b:	e9 00 00 00 00       	jmp    1020 <__pfx_FillGuestSelectorData>

0000000000001020 <__pfx_FillGuestSelectorData>:
    1020:	90                   	nop
    1021:	90                   	nop
    1022:	90                   	nop
    1023:	90                   	nop
    1024:	90                   	nop
    1025:	90                   	nop
    1026:	90                   	nop
    1027:	90                   	nop
    1028:	90                   	nop
    1029:	90                   	nop
    102a:	90                   	nop
    102b:	90                   	nop
    102c:	90                   	nop
    102d:	90                   	nop
    102e:	90                   	nop
    102f:	90                   	nop

0000000000001030 <FillGuestSelectorData>:
    1030:	e8 00 00 00 00       	call   1035 <FillGuestSelectorData+0x5>
    1035:	55                   	push   %rbp
    1036:	48 89 e5             	mov    %rsp,%rbp
    1039:	41 57                	push   %r15
    103b:	41 56                	push   %r14
    103d:	41 55                	push   %r13
    103f:	41 54                	push   %r12
    1041:	41 89 d4             	mov    %edx,%r12d
    1044:	53                   	push   %rbx
    1045:	89 f3                	mov    %esi,%ebx
    1047:	48 83 ec 18          	sub    $0x18,%rsp
    104b:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    1052:	00 00 
    1054:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1058:	31 c0                	xor    %eax,%eax
    105a:	83 e2 04             	and    $0x4,%edx
    105d:	0f 85 9a 00 00 00    	jne    10fd <FillGuestSelectorData+0xcd>
    1063:	48 89 fa             	mov    %rdi,%rdx
    1066:	41 0f b7 f4          	movzwl %r12w,%esi
    106a:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
    106e:	e8 1d fe ff ff       	call   e90 <GetSegmentDescriptor.part.0>
    1073:	44 0f b6 75 c3       	movzbl -0x3d(%rbp),%r14d
    1078:	0f b6 45 c2          	movzbl -0x3e(%rbp),%eax
    107c:	44 8b 7d c4          	mov    -0x3c(%rbp),%r15d
    1080:	41 c1 e6 0c          	shl    $0xc,%r14d
    1084:	41 09 c6             	or     %eax,%r14d
    1087:	66 45 85 e4          	test   %r12w,%r12w
    108b:	75 07                	jne    1094 <FillGuestSelectorData+0x64>
    108d:	41 81 ce 00 00 01 00 	or     $0x10000,%r14d
    1094:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
    1098:	01 db                	add    %ebx,%ebx
    109a:	41 0f b7 f4          	movzwl %r12w,%esi
    109e:	8d bb 00 08 00 00    	lea    0x800(%rbx),%edi
    10a4:	e8 00 00 00 00       	call   10a9 <FillGuestSelectorData+0x79>
    10a9:	8d bb 00 48 00 00    	lea    0x4800(%rbx),%edi
    10af:	4c 89 fe             	mov    %r15,%rsi
    10b2:	e8 00 00 00 00       	call   10b7 <FillGuestSelectorData+0x87>
    10b7:	8d bb 14 48 00 00    	lea    0x4814(%rbx),%edi
    10bd:	4c 89 f6             	mov    %r14,%rsi
    10c0:	e8 00 00 00 00       	call   10c5 <FillGuestSelectorData+0x95>
    10c5:	8d bb 06 68 00 00    	lea    0x6806(%rbx),%edi
    10cb:	4c 89 ee             	mov    %r13,%rsi
    10ce:	e8 00 00 00 00       	call   10d3 <FillGuestSelectorData+0xa3>
    10d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    10d7:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
    10de:	00 00 
    10e0:	75 26                	jne    1108 <FillGuestSelectorData+0xd8>
    10e2:	48 83 c4 18          	add    $0x18,%rsp
    10e6:	5b                   	pop    %rbx
    10e7:	41 5c                	pop    %r12
    10e9:	41 5d                	pop    %r13
    10eb:	41 5e                	pop    %r14
    10ed:	41 5f                	pop    %r15
    10ef:	5d                   	pop    %rbp
    10f0:	31 c0                	xor    %eax,%eax
    10f2:	31 d2                	xor    %edx,%edx
    10f4:	31 f6                	xor    %esi,%esi
    10f6:	31 ff                	xor    %edi,%edi
    10f8:	e9 00 00 00 00       	jmp    10fd <FillGuestSelectorData+0xcd>
    10fd:	45 31 ed             	xor    %r13d,%r13d
    1100:	45 31 f6             	xor    %r14d,%r14d
    1103:	45 31 ff             	xor    %r15d,%r15d
    1106:	eb 90                	jmp    1098 <FillGuestSelectorData+0x68>
    1108:	e8 00 00 00 00       	call   110d <FillGuestSelectorData+0xdd>
    110d:	0f 1f 00             	nopl   (%rax)

0000000000001110 <__pfx_AdjustControls>:
    1110:	90                   	nop
    1111:	90                   	nop
    1112:	90                   	nop
    1113:	90                   	nop
    1114:	90                   	nop
    1115:	90                   	nop
    1116:	90                   	nop
    1117:	90                   	nop
    1118:	90                   	nop
    1119:	90                   	nop
    111a:	90                   	nop
    111b:	90                   	nop
    111c:	90                   	nop
    111d:	90                   	nop
    111e:	90                   	nop
    111f:	90                   	nop

0000000000001120 <AdjustControls>:
    1120:	e8 00 00 00 00       	call   1125 <AdjustControls+0x5>
    1125:	55                   	push   %rbp
    1126:	48 89 e5             	mov    %rsp,%rbp
    1129:	53                   	push   %rbx
    112a:	89 fb                	mov    %edi,%ebx
    112c:	89 f7                	mov    %esi,%edi
    112e:	e8 00 00 00 00       	call   1133 <AdjustControls+0x13>
    1133:	48 89 c2             	mov    %rax,%rdx
    1136:	48 c1 ea 20          	shr    $0x20,%rdx
    113a:	21 d3                	and    %edx,%ebx
    113c:	09 d8                	or     %ebx,%eax
    113e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1142:	c9                   	leave
    1143:	31 d2                	xor    %edx,%edx
    1145:	31 f6                	xor    %esi,%esi
    1147:	31 ff                	xor    %edi,%edi
    1149:	e9 00 00 00 00       	jmp    114e <AdjustControls+0x2e>
    114e:	66 90                	xchg   %ax,%ax

0000000000001150 <__pfx_SetupVmcsAndVirtualizeMachine>:
    1150:	90                   	nop
    1151:	90                   	nop
    1152:	90                   	nop
    1153:	90                   	nop
    1154:	90                   	nop
    1155:	90                   	nop
    1156:	90                   	nop
    1157:	90                   	nop
    1158:	90                   	nop
    1159:	90                   	nop
    115a:	90                   	nop
    115b:	90                   	nop
    115c:	90                   	nop
    115d:	90                   	nop
    115e:	90                   	nop
    115f:	90                   	nop

0000000000001160 <SetupVmcsAndVirtualizeMachine>:
    1160:	e8 00 00 00 00       	call   1165 <SetupVmcsAndVirtualizeMachine+0x5>
    1165:	55                   	push   %rbp
    1166:	48 89 e5             	mov    %rsp,%rbp
    1169:	41 55                	push   %r13
    116b:	49 89 fd             	mov    %rdi,%r13
    116e:	41 54                	push   %r12
    1170:	49 89 d4             	mov    %rdx,%r12
    1173:	53                   	push   %rbx
    1174:	48 83 ec 30          	sub    $0x30,%rsp
    1178:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    117f:	00 00 
    1181:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1185:	31 c0                	xor    %eax,%eax
    1187:	e8 00 00 00 00       	call   118c <SetupVmcsAndVirtualizeMachine+0x2c>
    118c:	bf 00 0c 00 00       	mov    $0xc00,%edi
    1191:	25 f8 00 00 00       	and    $0xf8,%eax
    1196:	48 89 c6             	mov    %rax,%rsi
    1199:	e8 00 00 00 00       	call   119e <SetupVmcsAndVirtualizeMachine+0x3e>
    119e:	e8 00 00 00 00       	call   11a3 <SetupVmcsAndVirtualizeMachine+0x43>
    11a3:	bf 02 0c 00 00       	mov    $0xc02,%edi
    11a8:	25 f8 00 00 00       	and    $0xf8,%eax
    11ad:	48 89 c6             	mov    %rax,%rsi
    11b0:	e8 00 00 00 00       	call   11b5 <SetupVmcsAndVirtualizeMachine+0x55>
    11b5:	e8 00 00 00 00       	call   11ba <SetupVmcsAndVirtualizeMachine+0x5a>
    11ba:	bf 04 0c 00 00       	mov    $0xc04,%edi
    11bf:	25 f8 00 00 00       	and    $0xf8,%eax
    11c4:	48 89 c6             	mov    %rax,%rsi
    11c7:	e8 00 00 00 00       	call   11cc <SetupVmcsAndVirtualizeMachine+0x6c>
    11cc:	e8 00 00 00 00       	call   11d1 <SetupVmcsAndVirtualizeMachine+0x71>
    11d1:	bf 06 0c 00 00       	mov    $0xc06,%edi
    11d6:	25 f8 00 00 00       	and    $0xf8,%eax
    11db:	48 89 c6             	mov    %rax,%rsi
    11de:	e8 00 00 00 00       	call   11e3 <SetupVmcsAndVirtualizeMachine+0x83>
    11e3:	e8 00 00 00 00       	call   11e8 <SetupVmcsAndVirtualizeMachine+0x88>
    11e8:	bf 08 0c 00 00       	mov    $0xc08,%edi
    11ed:	25 f8 00 00 00       	and    $0xf8,%eax
    11f2:	48 89 c6             	mov    %rax,%rsi
    11f5:	e8 00 00 00 00       	call   11fa <SetupVmcsAndVirtualizeMachine+0x9a>
    11fa:	e8 00 00 00 00       	call   11ff <SetupVmcsAndVirtualizeMachine+0x9f>
    11ff:	bf 0a 0c 00 00       	mov    $0xc0a,%edi
    1204:	25 f8 00 00 00       	and    $0xf8,%eax
    1209:	48 89 c6             	mov    %rax,%rsi
    120c:	e8 00 00 00 00       	call   1211 <SetupVmcsAndVirtualizeMachine+0xb1>
    1211:	e8 00 00 00 00       	call   1216 <SetupVmcsAndVirtualizeMachine+0xb6>
    1216:	bf 0c 0c 00 00       	mov    $0xc0c,%edi
    121b:	25 f8 00 00 00       	and    $0xf8,%eax
    1220:	48 89 c6             	mov    %rax,%rsi
    1223:	e8 00 00 00 00       	call   1228 <SetupVmcsAndVirtualizeMachine+0xc8>
    1228:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    122f:	bf 00 28 00 00       	mov    $0x2800,%edi
    1234:	e8 00 00 00 00       	call   1239 <SetupVmcsAndVirtualizeMachine+0xd9>
    1239:	bf d9 01 00 00       	mov    $0x1d9,%edi
    123e:	e8 00 00 00 00       	call   1243 <SetupVmcsAndVirtualizeMachine+0xe3>
    1243:	bf 02 28 00 00       	mov    $0x2802,%edi
    1248:	89 c6                	mov    %eax,%esi
    124a:	e8 00 00 00 00       	call   124f <SetupVmcsAndVirtualizeMachine+0xef>
    124f:	bf d9 01 00 00       	mov    $0x1d9,%edi
    1254:	e8 00 00 00 00       	call   1259 <SetupVmcsAndVirtualizeMachine+0xf9>
    1259:	bf 03 28 00 00       	mov    $0x2803,%edi
    125e:	48 c1 e8 20          	shr    $0x20,%rax
    1262:	48 89 c6             	mov    %rax,%rsi
    1265:	e8 00 00 00 00       	call   126a <SetupVmcsAndVirtualizeMachine+0x10a>
    126a:	31 f6                	xor    %esi,%esi
    126c:	bf 10 20 00 00       	mov    $0x2010,%edi
    1271:	e8 00 00 00 00       	call   1276 <SetupVmcsAndVirtualizeMachine+0x116>
    1276:	31 f6                	xor    %esi,%esi
    1278:	bf 11 20 00 00       	mov    $0x2011,%edi
    127d:	e8 00 00 00 00       	call   1282 <SetupVmcsAndVirtualizeMachine+0x122>
    1282:	31 f6                	xor    %esi,%esi
    1284:	bf 06 40 00 00       	mov    $0x4006,%edi
    1289:	e8 00 00 00 00       	call   128e <SetupVmcsAndVirtualizeMachine+0x12e>
    128e:	31 f6                	xor    %esi,%esi
    1290:	bf 08 40 00 00       	mov    $0x4008,%edi
    1295:	e8 00 00 00 00       	call   129a <SetupVmcsAndVirtualizeMachine+0x13a>
    129a:	31 f6                	xor    %esi,%esi
    129c:	bf 0e 40 00 00       	mov    $0x400e,%edi
    12a1:	e8 00 00 00 00       	call   12a6 <SetupVmcsAndVirtualizeMachine+0x146>
    12a6:	31 f6                	xor    %esi,%esi
    12a8:	bf 10 40 00 00       	mov    $0x4010,%edi
    12ad:	e8 00 00 00 00       	call   12b2 <SetupVmcsAndVirtualizeMachine+0x152>
    12b2:	31 f6                	xor    %esi,%esi
    12b4:	bf 14 40 00 00       	mov    $0x4014,%edi
    12b9:	e8 00 00 00 00       	call   12be <SetupVmcsAndVirtualizeMachine+0x15e>
    12be:	31 f6                	xor    %esi,%esi
    12c0:	bf 16 40 00 00       	mov    $0x4016,%edi
    12c5:	e8 00 00 00 00       	call   12ca <SetupVmcsAndVirtualizeMachine+0x16a>
    12ca:	e8 00 00 00 00       	call   12cf <SetupVmcsAndVirtualizeMachine+0x16f>
    12cf:	48 89 c3             	mov    %rax,%rbx
    12d2:	e8 00 00 00 00       	call   12d7 <SetupVmcsAndVirtualizeMachine+0x177>
    12d7:	31 f6                	xor    %esi,%esi
    12d9:	48 89 df             	mov    %rbx,%rdi
    12dc:	0f b7 d0             	movzwl %ax,%edx
    12df:	e8 00 00 00 00       	call   12e4 <SetupVmcsAndVirtualizeMachine+0x184>
    12e4:	e8 00 00 00 00       	call   12e9 <SetupVmcsAndVirtualizeMachine+0x189>
    12e9:	be 01 00 00 00       	mov    $0x1,%esi
    12ee:	48 89 df             	mov    %rbx,%rdi
    12f1:	0f b7 d0             	movzwl %ax,%edx
    12f4:	e8 00 00 00 00       	call   12f9 <SetupVmcsAndVirtualizeMachine+0x199>
    12f9:	e8 00 00 00 00       	call   12fe <SetupVmcsAndVirtualizeMachine+0x19e>
    12fe:	be 02 00 00 00       	mov    $0x2,%esi
    1303:	48 89 df             	mov    %rbx,%rdi
    1306:	0f b7 d0             	movzwl %ax,%edx
    1309:	e8 00 00 00 00       	call   130e <SetupVmcsAndVirtualizeMachine+0x1ae>
    130e:	e8 00 00 00 00       	call   1313 <SetupVmcsAndVirtualizeMachine+0x1b3>
    1313:	be 03 00 00 00       	mov    $0x3,%esi
    1318:	48 89 df             	mov    %rbx,%rdi
    131b:	0f b7 d0             	movzwl %ax,%edx
    131e:	e8 00 00 00 00       	call   1323 <SetupVmcsAndVirtualizeMachine+0x1c3>
    1323:	e8 00 00 00 00       	call   1328 <SetupVmcsAndVirtualizeMachine+0x1c8>
    1328:	be 04 00 00 00       	mov    $0x4,%esi
    132d:	48 89 df             	mov    %rbx,%rdi
    1330:	0f b7 d0             	movzwl %ax,%edx
    1333:	e8 00 00 00 00       	call   1338 <SetupVmcsAndVirtualizeMachine+0x1d8>
    1338:	e8 00 00 00 00       	call   133d <SetupVmcsAndVirtualizeMachine+0x1dd>
    133d:	be 05 00 00 00       	mov    $0x5,%esi
    1342:	48 89 df             	mov    %rbx,%rdi
    1345:	0f b7 d0             	movzwl %ax,%edx
    1348:	e8 00 00 00 00       	call   134d <SetupVmcsAndVirtualizeMachine+0x1ed>
    134d:	e8 00 00 00 00       	call   1352 <SetupVmcsAndVirtualizeMachine+0x1f2>
    1352:	be 06 00 00 00       	mov    $0x6,%esi
    1357:	48 89 df             	mov    %rbx,%rdi
    135a:	0f b7 d0             	movzwl %ax,%edx
    135d:	e8 00 00 00 00       	call   1362 <SetupVmcsAndVirtualizeMachine+0x202>
    1362:	e8 00 00 00 00       	call   1367 <SetupVmcsAndVirtualizeMachine+0x207>
    1367:	be 07 00 00 00       	mov    $0x7,%esi
    136c:	48 89 df             	mov    %rbx,%rdi
    136f:	0f b7 d0             	movzwl %ax,%edx
    1372:	e8 00 00 00 00       	call   1377 <SetupVmcsAndVirtualizeMachine+0x217>
    1377:	bf 00 01 00 c0       	mov    $0xc0000100,%edi
    137c:	e8 00 00 00 00       	call   1381 <SetupVmcsAndVirtualizeMachine+0x221>
    1381:	bf 0e 68 00 00       	mov    $0x680e,%edi
    1386:	48 89 c6             	mov    %rax,%rsi
    1389:	e8 00 00 00 00       	call   138e <SetupVmcsAndVirtualizeMachine+0x22e>
    138e:	bf 01 01 00 c0       	mov    $0xc0000101,%edi
    1393:	e8 00 00 00 00       	call   1398 <SetupVmcsAndVirtualizeMachine+0x238>
    1398:	bf 10 68 00 00       	mov    $0x6810,%edi
    139d:	48 89 c6             	mov    %rax,%rsi
    13a0:	e8 00 00 00 00       	call   13a5 <SetupVmcsAndVirtualizeMachine+0x245>
    13a5:	bf 82 04 00 00       	mov    $0x482,%edi
    13aa:	e8 00 00 00 00       	call   13af <SetupVmcsAndVirtualizeMachine+0x24f>
    13af:	bf 02 40 00 00       	mov    $0x4002,%edi
    13b4:	48 89 c6             	mov    %rax,%rsi
    13b7:	48 c1 ee 20          	shr    $0x20,%rsi
    13bb:	81 e6 00 00 00 90    	and    $0x90000000,%esi
    13c1:	09 c6                	or     %eax,%esi
    13c3:	e8 00 00 00 00       	call   13c8 <SetupVmcsAndVirtualizeMachine+0x268>
    13c8:	bf 8b 04 00 00       	mov    $0x48b,%edi
    13cd:	e8 00 00 00 00       	call   13d2 <SetupVmcsAndVirtualizeMachine+0x272>
    13d2:	bf 1e 40 00 00       	mov    $0x401e,%edi
    13d7:	48 89 c6             	mov    %rax,%rsi
    13da:	48 c1 ee 20          	shr    $0x20,%rsi
    13de:	81 e6 08 10 10 00    	and    $0x101008,%esi
    13e4:	09 c6                	or     %eax,%esi
    13e6:	e8 00 00 00 00       	call   13eb <SetupVmcsAndVirtualizeMachine+0x28b>
    13eb:	bf 81 04 00 00       	mov    $0x481,%edi
    13f0:	e8 00 00 00 00       	call   13f5 <SetupVmcsAndVirtualizeMachine+0x295>
    13f5:	bf 00 40 00 00       	mov    $0x4000,%edi
    13fa:	89 c6                	mov    %eax,%esi
    13fc:	e8 00 00 00 00       	call   1401 <SetupVmcsAndVirtualizeMachine+0x2a1>
    1401:	bf 83 04 00 00       	mov    $0x483,%edi
    1406:	e8 00 00 00 00       	call   140b <SetupVmcsAndVirtualizeMachine+0x2ab>
    140b:	bf 0c 40 00 00       	mov    $0x400c,%edi
    1410:	48 89 c6             	mov    %rax,%rsi
    1413:	48 c1 ee 20          	shr    $0x20,%rsi
    1417:	81 e6 00 82 00 00    	and    $0x8200,%esi
    141d:	09 c6                	or     %eax,%esi
    141f:	e8 00 00 00 00       	call   1424 <SetupVmcsAndVirtualizeMachine+0x2c4>
    1424:	bf 84 04 00 00       	mov    $0x484,%edi
    1429:	e8 00 00 00 00       	call   142e <SetupVmcsAndVirtualizeMachine+0x2ce>
    142e:	bf 12 40 00 00       	mov    $0x4012,%edi
    1433:	48 89 c6             	mov    %rax,%rsi
    1436:	48 c1 ee 20          	shr    $0x20,%rsi
    143a:	81 e6 00 02 00 00    	and    $0x200,%esi
    1440:	09 c6                	or     %eax,%esi
    1442:	e8 00 00 00 00       	call   1447 <SetupVmcsAndVirtualizeMachine+0x2e7>
    1447:	31 f6                	xor    %esi,%esi
    1449:	bf 0a 40 00 00       	mov    $0x400a,%edi
    144e:	e8 00 00 00 00       	call   1453 <SetupVmcsAndVirtualizeMachine+0x2f3>
    1453:	31 f6                	xor    %esi,%esi
    1455:	bf 08 60 00 00       	mov    $0x6008,%edi
    145a:	e8 00 00 00 00       	call   145f <SetupVmcsAndVirtualizeMachine+0x2ff>
    145f:	31 f6                	xor    %esi,%esi
    1461:	bf 0a 60 00 00       	mov    $0x600a,%edi
    1466:	e8 00 00 00 00       	call   146b <SetupVmcsAndVirtualizeMachine+0x30b>
    146b:	31 f6                	xor    %esi,%esi
    146d:	bf 0c 60 00 00       	mov    $0x600c,%edi
    1472:	e8 00 00 00 00       	call   1477 <SetupVmcsAndVirtualizeMachine+0x317>
    1477:	31 f6                	xor    %esi,%esi
    1479:	bf 0e 60 00 00       	mov    $0x600e,%edi
    147e:	e8 00 00 00 00       	call   1483 <SetupVmcsAndVirtualizeMachine+0x323>
    1483:	31 f6                	xor    %esi,%esi
    1485:	bf 00 60 00 00       	mov    $0x6000,%edi
    148a:	e8 00 00 00 00       	call   148f <SetupVmcsAndVirtualizeMachine+0x32f>
    148f:	31 f6                	xor    %esi,%esi
    1491:	bf 02 60 00 00       	mov    $0x6002,%edi
    1496:	e8 00 00 00 00       	call   149b <SetupVmcsAndVirtualizeMachine+0x33b>
    149b:	31 f6                	xor    %esi,%esi
    149d:	bf 04 60 00 00       	mov    $0x6004,%edi
    14a2:	e8 00 00 00 00       	call   14a7 <SetupVmcsAndVirtualizeMachine+0x347>
    14a7:	31 f6                	xor    %esi,%esi
    14a9:	bf 06 60 00 00       	mov    $0x6006,%edi
    14ae:	e8 00 00 00 00       	call   14b3 <SetupVmcsAndVirtualizeMachine+0x353>
    14b3:	e8 00 00 00 00       	call   14b8 <SetupVmcsAndVirtualizeMachine+0x358>
    14b8:	bf 00 68 00 00       	mov    $0x6800,%edi
    14bd:	48 89 c6             	mov    %rax,%rsi
    14c0:	e8 00 00 00 00       	call   14c5 <SetupVmcsAndVirtualizeMachine+0x365>
    14c5:	e8 00 00 00 00       	call   14ca <SetupVmcsAndVirtualizeMachine+0x36a>
    14ca:	bf 02 68 00 00       	mov    $0x6802,%edi
    14cf:	48 89 c6             	mov    %rax,%rsi
    14d2:	e8 00 00 00 00       	call   14d7 <SetupVmcsAndVirtualizeMachine+0x377>
    14d7:	e8 00 00 00 00       	call   14dc <SetupVmcsAndVirtualizeMachine+0x37c>
    14dc:	bf 04 68 00 00       	mov    $0x6804,%edi
    14e1:	48 89 c6             	mov    %rax,%rsi
    14e4:	e8 00 00 00 00       	call   14e9 <SetupVmcsAndVirtualizeMachine+0x389>
    14e9:	be 00 04 00 00       	mov    $0x400,%esi
    14ee:	bf 1a 68 00 00       	mov    $0x681a,%edi
    14f3:	e8 00 00 00 00       	call   14f8 <SetupVmcsAndVirtualizeMachine+0x398>
    14f8:	e8 00 00 00 00       	call   14fd <SetupVmcsAndVirtualizeMachine+0x39d>
    14fd:	bf 00 6c 00 00       	mov    $0x6c00,%edi
    1502:	48 89 c6             	mov    %rax,%rsi
    1505:	e8 00 00 00 00       	call   150a <SetupVmcsAndVirtualizeMachine+0x3aa>
    150a:	e8 00 00 00 00       	call   150f <SetupVmcsAndVirtualizeMachine+0x3af>
    150f:	bf 02 6c 00 00       	mov    $0x6c02,%edi
    1514:	48 89 c6             	mov    %rax,%rsi
    1517:	e8 00 00 00 00       	call   151c <SetupVmcsAndVirtualizeMachine+0x3bc>
    151c:	e8 00 00 00 00       	call   1521 <SetupVmcsAndVirtualizeMachine+0x3c1>
    1521:	bf 04 6c 00 00       	mov    $0x6c04,%edi
    1526:	48 89 c6             	mov    %rax,%rsi
    1529:	e8 00 00 00 00       	call   152e <SetupVmcsAndVirtualizeMachine+0x3ce>
    152e:	48 89 de             	mov    %rbx,%rsi
    1531:	bf 16 68 00 00       	mov    $0x6816,%edi
    1536:	e8 00 00 00 00       	call   153b <SetupVmcsAndVirtualizeMachine+0x3db>
    153b:	e8 00 00 00 00       	call   1540 <SetupVmcsAndVirtualizeMachine+0x3e0>
    1540:	bf 10 48 00 00       	mov    $0x4810,%edi
    1545:	0f b7 f0             	movzwl %ax,%esi
    1548:	e8 00 00 00 00       	call   154d <SetupVmcsAndVirtualizeMachine+0x3ed>
    154d:	e8 00 00 00 00       	call   1552 <SetupVmcsAndVirtualizeMachine+0x3f2>
    1552:	bf 18 68 00 00       	mov    $0x6818,%edi
    1557:	48 89 c6             	mov    %rax,%rsi
    155a:	e8 00 00 00 00       	call   155f <SetupVmcsAndVirtualizeMachine+0x3ff>
    155f:	e8 00 00 00 00       	call   1564 <SetupVmcsAndVirtualizeMachine+0x404>
    1564:	bf 12 48 00 00       	mov    $0x4812,%edi
    1569:	0f b7 f0             	movzwl %ax,%esi
    156c:	e8 00 00 00 00       	call   1571 <SetupVmcsAndVirtualizeMachine+0x411>
    1571:	e8 00 00 00 00       	call   1576 <SetupVmcsAndVirtualizeMachine+0x416>
    1576:	bf 20 68 00 00       	mov    $0x6820,%edi
    157b:	48 89 c6             	mov    %rax,%rsi
    157e:	e8 00 00 00 00       	call   1583 <SetupVmcsAndVirtualizeMachine+0x423>
    1583:	bf 74 01 00 00       	mov    $0x174,%edi
    1588:	e8 00 00 00 00       	call   158d <SetupVmcsAndVirtualizeMachine+0x42d>
    158d:	bf 2a 48 00 00       	mov    $0x482a,%edi
    1592:	48 89 c6             	mov    %rax,%rsi
    1595:	e8 00 00 00 00       	call   159a <SetupVmcsAndVirtualizeMachine+0x43a>
    159a:	bf 75 01 00 00       	mov    $0x175,%edi
    159f:	e8 00 00 00 00       	call   15a4 <SetupVmcsAndVirtualizeMachine+0x444>
    15a4:	bf 24 68 00 00       	mov    $0x6824,%edi
    15a9:	48 89 c6             	mov    %rax,%rsi
    15ac:	e8 00 00 00 00       	call   15b1 <SetupVmcsAndVirtualizeMachine+0x451>
    15b1:	bf 76 01 00 00       	mov    $0x176,%edi
    15b6:	e8 00 00 00 00       	call   15bb <SetupVmcsAndVirtualizeMachine+0x45b>
    15bb:	bf 26 68 00 00       	mov    $0x6826,%edi
    15c0:	48 89 c6             	mov    %rax,%rsi
    15c3:	e8 00 00 00 00       	call   15c8 <SetupVmcsAndVirtualizeMachine+0x468>
    15c8:	e8 00 00 00 00       	call   15cd <SetupVmcsAndVirtualizeMachine+0x46d>
    15cd:	31 f6                	xor    %esi,%esi
    15cf:	a8 04                	test   $0x4,%al
    15d1:	75 13                	jne    15e6 <SetupVmcsAndVirtualizeMachine+0x486>
    15d3:	0f b7 f0             	movzwl %ax,%esi
    15d6:	48 89 da             	mov    %rbx,%rdx
    15d9:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
    15dd:	e8 ae f8 ff ff       	call   e90 <GetSegmentDescriptor.part.0>
    15e2:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    15e6:	bf 0a 6c 00 00       	mov    $0x6c0a,%edi
    15eb:	e8 00 00 00 00       	call   15f0 <SetupVmcsAndVirtualizeMachine+0x490>
    15f0:	bf 00 01 00 c0       	mov    $0xc0000100,%edi
    15f5:	e8 00 00 00 00       	call   15fa <SetupVmcsAndVirtualizeMachine+0x49a>
    15fa:	bf 06 6c 00 00       	mov    $0x6c06,%edi
    15ff:	48 89 c6             	mov    %rax,%rsi
    1602:	e8 00 00 00 00       	call   1607 <SetupVmcsAndVirtualizeMachine+0x4a7>
    1607:	bf 01 01 00 c0       	mov    $0xc0000101,%edi
    160c:	e8 00 00 00 00       	call   1611 <SetupVmcsAndVirtualizeMachine+0x4b1>
    1611:	bf 08 6c 00 00       	mov    $0x6c08,%edi
    1616:	48 89 c6             	mov    %rax,%rsi
    1619:	e8 00 00 00 00       	call   161e <SetupVmcsAndVirtualizeMachine+0x4be>
    161e:	48 89 de             	mov    %rbx,%rsi
    1621:	bf 0c 6c 00 00       	mov    $0x6c0c,%edi
    1626:	e8 00 00 00 00       	call   162b <SetupVmcsAndVirtualizeMachine+0x4cb>
    162b:	e8 00 00 00 00       	call   1630 <SetupVmcsAndVirtualizeMachine+0x4d0>
    1630:	bf 0e 6c 00 00       	mov    $0x6c0e,%edi
    1635:	48 89 c6             	mov    %rax,%rsi
    1638:	e8 00 00 00 00       	call   163d <SetupVmcsAndVirtualizeMachine+0x4dd>
    163d:	e8 fe f5 ff ff       	call   c40 <SetHostStateFromGuest>
    1642:	bf 74 01 00 00       	mov    $0x174,%edi
    1647:	e8 00 00 00 00       	call   164c <SetupVmcsAndVirtualizeMachine+0x4ec>
    164c:	bf 00 4c 00 00       	mov    $0x4c00,%edi
    1651:	48 89 c6             	mov    %rax,%rsi
    1654:	e8 00 00 00 00       	call   1659 <SetupVmcsAndVirtualizeMachine+0x4f9>
    1659:	bf 75 01 00 00       	mov    $0x175,%edi
    165e:	e8 00 00 00 00       	call   1663 <SetupVmcsAndVirtualizeMachine+0x503>
    1663:	bf 10 6c 00 00       	mov    $0x6c10,%edi
    1668:	48 89 c6             	mov    %rax,%rsi
    166b:	e8 00 00 00 00       	call   1670 <SetupVmcsAndVirtualizeMachine+0x510>
    1670:	bf 76 01 00 00       	mov    $0x176,%edi
    1675:	e8 00 00 00 00       	call   167a <SetupVmcsAndVirtualizeMachine+0x51a>
    167a:	bf 12 6c 00 00       	mov    $0x6c12,%edi
    167f:	48 89 c6             	mov    %rax,%rsi
    1682:	e8 00 00 00 00       	call   1687 <SetupVmcsAndVirtualizeMachine+0x527>
    1687:	49 8b 75 28          	mov    0x28(%r13),%rsi
    168b:	bf 04 20 00 00       	mov    $0x2004,%edi
    1690:	e8 00 00 00 00       	call   1695 <SetupVmcsAndVirtualizeMachine+0x535>
    1695:	49 8b 75 18          	mov    0x18(%r13),%rsi
    1699:	bf 14 6c 00 00       	mov    $0x6c14,%edi
    169e:	48 81 c6 ff 7f 00 00 	add    $0x7fff,%rsi
    16a5:	e8 00 00 00 00       	call   16aa <SetupVmcsAndVirtualizeMachine+0x54a>
    16aa:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    16b1:	bf 16 6c 00 00       	mov    $0x6c16,%edi
    16b6:	e8 00 00 00 00       	call   16bb <SetupVmcsAndVirtualizeMachine+0x55b>
    16bb:	4c 89 e6             	mov    %r12,%rsi
    16be:	bf 1c 68 00 00       	mov    $0x681c,%edi
    16c3:	e8 00 00 00 00       	call   16c8 <SetupVmcsAndVirtualizeMachine+0x568>
    16c8:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    16cf:	bf 1e 68 00 00       	mov    $0x681e,%edi
    16d4:	e8 00 00 00 00       	call   16d9 <SetupVmcsAndVirtualizeMachine+0x579>
    16d9:	48 8d 75 b8          	lea    -0x48(%rbp),%rsi
    16dd:	bf 1e 68 00 00       	mov    $0x681e,%edi
    16e2:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    16e9:	00 
    16ea:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    16f1:	00 
    16f2:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    16f9:	00 
    16fa:	e8 00 00 00 00       	call   16ff <SetupVmcsAndVirtualizeMachine+0x59f>
    16ff:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    1703:	bf 1c 68 00 00       	mov    $0x681c,%edi
    1708:	e8 00 00 00 00       	call   170d <SetupVmcsAndVirtualizeMachine+0x5ad>
    170d:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
    1711:	bf 02 68 00 00       	mov    $0x6802,%edi
    1716:	e8 00 00 00 00       	call   171b <SetupVmcsAndVirtualizeMachine+0x5bb>
    171b:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    171f:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
    1726:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    172d:	e8 00 00 00 00       	call   1732 <SetupVmcsAndVirtualizeMachine+0x5d2>
    1732:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1736:	4c 89 e2             	mov    %r12,%rdx
    1739:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1740:	e8 00 00 00 00       	call   1745 <SetupVmcsAndVirtualizeMachine+0x5e5>
    1745:	e8 00 00 00 00       	call   174a <SetupVmcsAndVirtualizeMachine+0x5ea>
    174a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    174e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1755:	48 89 c2             	mov    %rax,%rdx
    1758:	e8 00 00 00 00       	call   175d <SetupVmcsAndVirtualizeMachine+0x5fd>
    175d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1761:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
    1768:	00 00 
    176a:	75 1a                	jne    1786 <SetupVmcsAndVirtualizeMachine+0x626>
    176c:	48 83 c4 30          	add    $0x30,%rsp
    1770:	b8 01 00 00 00       	mov    $0x1,%eax
    1775:	5b                   	pop    %rbx
    1776:	41 5c                	pop    %r12
    1778:	41 5d                	pop    %r13
    177a:	5d                   	pop    %rbp
    177b:	31 d2                	xor    %edx,%edx
    177d:	31 f6                	xor    %esi,%esi
    177f:	31 ff                	xor    %edi,%edi
    1781:	e9 00 00 00 00       	jmp    1786 <SetupVmcsAndVirtualizeMachine+0x626>
    1786:	e8 00 00 00 00       	call   178b <SetupVmcsAndVirtualizeMachine+0x62b>
    178b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001790 <__pfx_SetTargetControls>:
    1790:	90                   	nop
    1791:	90                   	nop
    1792:	90                   	nop
    1793:	90                   	nop
    1794:	90                   	nop
    1795:	90                   	nop
    1796:	90                   	nop
    1797:	90                   	nop
    1798:	90                   	nop
    1799:	90                   	nop
    179a:	90                   	nop
    179b:	90                   	nop
    179c:	90                   	nop
    179d:	90                   	nop
    179e:	90                   	nop
    179f:	90                   	nop

00000000000017a0 <SetTargetControls>:
    17a0:	e8 00 00 00 00       	call   17a5 <SetTargetControls+0x5>
    17a5:	31 c0                	xor    %eax,%eax
    17a7:	48 83 fe 03          	cmp    $0x3,%rsi
    17ab:	0f 87 8c 00 00 00    	ja     183d <SetTargetControls+0x9d>
    17b1:	55                   	push   %rbp
    17b2:	48 89 e5             	mov    %rsp,%rbp
    17b5:	48 85 ff             	test   %rdi,%rdi
    17b8:	75 39                	jne    17f3 <SetTargetControls+0x53>
    17ba:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 17c0 <SetTargetControls+0x20>
    17c0:	85 d2                	test   %edx,%edx
    17c2:	74 6d                	je     1831 <SetTargetControls+0x91>
    17c4:	48 85 f6             	test   %rsi,%rsi
    17c7:	74 7f                	je     1848 <SetTargetControls+0xa8>
    17c9:	48 83 fe 01          	cmp    $0x1,%rsi
    17cd:	0f 84 ba 00 00 00    	je     188d <SetTargetControls+0xed>
    17d3:	48 83 fe 02          	cmp    $0x2,%rsi
    17d7:	be 00 00 00 00       	mov    $0x0,%esi
    17dc:	0f 84 9c 00 00 00    	je     187e <SetTargetControls+0xde>
    17e2:	bf 0e 60 00 00       	mov    $0x600e,%edi
    17e7:	e8 00 00 00 00       	call   17ec <SetTargetControls+0x4c>
    17ec:	be ff ff ff ff       	mov    $0xffffffff,%esi
    17f1:	eb 23                	jmp    1816 <SetTargetControls+0x76>
    17f3:	48 85 f6             	test   %rsi,%rsi
    17f6:	74 5c                	je     1854 <SetTargetControls+0xb4>
    17f8:	48 83 fe 01          	cmp    $0x1,%rsi
    17fc:	74 71                	je     186f <SetTargetControls+0xcf>
    17fe:	48 83 fe 02          	cmp    $0x2,%rsi
    1802:	48 89 fe             	mov    %rdi,%rsi
    1805:	74 5c                	je     1863 <SetTargetControls+0xc3>
    1807:	bf 0e 60 00 00       	mov    $0x600e,%edi
    180c:	e8 00 00 00 00       	call   1811 <SetTargetControls+0x71>
    1811:	be 01 00 00 00       	mov    $0x1,%esi
    1816:	03 35 00 00 00 00    	add    0x0(%rip),%esi        # 181c <SetTargetControls+0x7c>
    181c:	bf 0a 40 00 00       	mov    $0x400a,%edi
    1821:	89 35 00 00 00 00    	mov    %esi,0x0(%rip)        # 1827 <SetTargetControls+0x87>
    1827:	e8 00 00 00 00       	call   182c <SetTargetControls+0x8c>
    182c:	b8 01 00 00 00       	mov    $0x1,%eax
    1831:	5d                   	pop    %rbp
    1832:	31 d2                	xor    %edx,%edx
    1834:	31 f6                	xor    %esi,%esi
    1836:	31 ff                	xor    %edi,%edi
    1838:	e9 00 00 00 00       	jmp    183d <SetTargetControls+0x9d>
    183d:	31 d2                	xor    %edx,%edx
    183f:	31 f6                	xor    %esi,%esi
    1841:	31 ff                	xor    %edi,%edi
    1843:	e9 00 00 00 00       	jmp    1848 <SetTargetControls+0xa8>
    1848:	bf 08 60 00 00       	mov    $0x6008,%edi
    184d:	e8 00 00 00 00       	call   1852 <SetTargetControls+0xb2>
    1852:	eb 98                	jmp    17ec <SetTargetControls+0x4c>
    1854:	48 89 fe             	mov    %rdi,%rsi
    1857:	bf 08 60 00 00       	mov    $0x6008,%edi
    185c:	e8 00 00 00 00       	call   1861 <SetTargetControls+0xc1>
    1861:	eb ae                	jmp    1811 <SetTargetControls+0x71>
    1863:	bf 0c 60 00 00       	mov    $0x600c,%edi
    1868:	e8 00 00 00 00       	call   186d <SetTargetControls+0xcd>
    186d:	eb a2                	jmp    1811 <SetTargetControls+0x71>
    186f:	48 89 fe             	mov    %rdi,%rsi
    1872:	bf 0a 60 00 00       	mov    $0x600a,%edi
    1877:	e8 00 00 00 00       	call   187c <SetTargetControls+0xdc>
    187c:	eb 93                	jmp    1811 <SetTargetControls+0x71>
    187e:	bf 0c 60 00 00       	mov    $0x600c,%edi
    1883:	e8 00 00 00 00       	call   1888 <SetTargetControls+0xe8>
    1888:	e9 5f ff ff ff       	jmp    17ec <SetTargetControls+0x4c>
    188d:	31 f6                	xor    %esi,%esi
    188f:	bf 0a 60 00 00       	mov    $0x600a,%edi
    1894:	e8 00 00 00 00       	call   1899 <SetTargetControls+0xf9>
    1899:	e9 4e ff ff ff       	jmp    17ec <SetTargetControls+0x4c>
    189e:	66 90                	xchg   %ax,%ax

00000000000018a0 <__pfx_VmResumeInstruction>:
    18a0:	90                   	nop
    18a1:	90                   	nop
    18a2:	90                   	nop
    18a3:	90                   	nop
    18a4:	90                   	nop
    18a5:	90                   	nop
    18a6:	90                   	nop
    18a7:	90                   	nop
    18a8:	90                   	nop
    18a9:	90                   	nop
    18aa:	90                   	nop
    18ab:	90                   	nop
    18ac:	90                   	nop
    18ad:	90                   	nop
    18ae:	90                   	nop
    18af:	90                   	nop

00000000000018b0 <VmResumeInstruction>:
    18b0:	e8 00 00 00 00       	call   18b5 <VmResumeInstruction+0x5>
    18b5:	55                   	push   %rbp
    18b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    18bd:	48 89 e5             	mov    %rsp,%rbp
    18c0:	48 83 ec 10          	sub    $0x10,%rsp
    18c4:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    18cb:	00 00 
    18cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    18d1:	31 c0                	xor    %eax,%eax
    18d3:	e8 00 00 00 00       	call   18d8 <VmResumeInstruction+0x28>
    18d8:	e8 00 00 00 00       	call   18dd <VmResumeInstruction+0x2d>
    18dd:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    18e1:	bf 00 44 00 00       	mov    $0x4400,%edi
    18e6:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    18ed:	00 
    18ee:	e8 00 00 00 00       	call   18f3 <VmResumeInstruction+0x43>
    18f3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    18f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    18fe:	e8 00 00 00 00       	call   1903 <VmResumeInstruction+0x53>
    1903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1907:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
    190e:	00 00 
    1910:	75 0c                	jne    191e <VmResumeInstruction+0x6e>
    1912:	c9                   	leave
    1913:	31 c0                	xor    %eax,%eax
    1915:	31 f6                	xor    %esi,%esi
    1917:	31 ff                	xor    %edi,%edi
    1919:	e9 00 00 00 00       	jmp    191e <VmResumeInstruction+0x6e>
    191e:	e8 00 00 00 00       	call   1923 <VmResumeInstruction+0x73>
    1923:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    192a:	00 00 00 00 
    192e:	66 90                	xchg   %ax,%ax

0000000000001930 <__pfx_MainVmExitHandler>:
    1930:	90                   	nop
    1931:	90                   	nop
    1932:	90                   	nop
    1933:	90                   	nop
    1934:	90                   	nop
    1935:	90                   	nop
    1936:	90                   	nop
    1937:	90                   	nop
    1938:	90                   	nop
    1939:	90                   	nop
    193a:	90                   	nop
    193b:	90                   	nop
    193c:	90                   	nop
    193d:	90                   	nop
    193e:	90                   	nop
    193f:	90                   	nop

0000000000001940 <MainVmExitHandler>:
    1940:	e8 00 00 00 00       	call   1945 <MainVmExitHandler+0x5>
    1945:	55                   	push   %rbp
    1946:	bf 02 44 00 00       	mov    $0x4402,%edi
    194b:	48 89 e5             	mov    %rsp,%rbp
    194e:	48 83 ec 20          	sub    $0x20,%rsp
    1952:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    1959:	00 00 
    195b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    195f:	31 c0                	xor    %eax,%eax
    1961:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
    1965:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    196c:	00 
    196d:	e8 00 00 00 00       	call   1972 <MainVmExitHandler+0x32>
    1972:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    1976:	bf 00 64 00 00       	mov    $0x6400,%edi
    197b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1982:	00 
    1983:	e8 00 00 00 00       	call   1988 <MainVmExitHandler+0x48>
    1988:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    198c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1990:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1997:	89 f0                	mov    %esi,%eax
    1999:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    199d:	e8 00 00 00 00       	call   19a2 <MainVmExitHandler+0x62>
    19a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    19a9:	e8 00 00 00 00       	call   19ae <MainVmExitHandler+0x6e>
    19ae:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    19b2:	bf 0c 44 00 00       	mov    $0x440c,%edi
    19b7:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    19be:	00 
    19bf:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 19ca <MainVmExitHandler+0x8a>
    19c6:	00 00 00 00 
    19ca:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 19d5 <MainVmExitHandler+0x95>
    19d1:	00 00 00 00 
    19d5:	e8 00 00 00 00       	call   19da <MainVmExitHandler+0x9a>
    19da:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    19e1:	bf 1e 68 00 00       	mov    $0x681e,%edi
    19e6:	e8 00 00 00 00       	call   19eb <MainVmExitHandler+0xab>
    19eb:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    19f2:	bf 1c 68 00 00       	mov    $0x681c,%edi
    19f7:	e8 00 00 00 00       	call   19fc <MainVmExitHandler+0xbc>
    19fc:	e8 3f f2 ff ff       	call   c40 <SetHostStateFromGuest>
    1a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a05:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
    1a0c:	00 00 
    1a0e:	75 11                	jne    1a21 <MainVmExitHandler+0xe1>
    1a10:	c9                   	leave
    1a11:	b8 01 00 00 00       	mov    $0x1,%eax
    1a16:	31 d2                	xor    %edx,%edx
    1a18:	31 f6                	xor    %esi,%esi
    1a1a:	31 ff                	xor    %edi,%edi
    1a1c:	e9 00 00 00 00       	jmp    1a21 <MainVmExitHandler+0xe1>
    1a21:	e8 00 00 00 00       	call   1a26 <MainVmExitHandler+0xe6>
    1a26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1a2d:	00 00 00 

0000000000001a30 <__pfx_InitiateVmxProcessor>:
    1a30:	90                   	nop
    1a31:	90                   	nop
    1a32:	90                   	nop
    1a33:	90                   	nop
    1a34:	90                   	nop
    1a35:	90                   	nop
    1a36:	90                   	nop
    1a37:	90                   	nop
    1a38:	90                   	nop
    1a39:	90                   	nop
    1a3a:	90                   	nop
    1a3b:	90                   	nop
    1a3c:	90                   	nop
    1a3d:	90                   	nop
    1a3e:	90                   	nop
    1a3f:	90                   	nop

0000000000001a40 <InitiateVmxProcessor>:
    1a40:	e8 00 00 00 00       	call   1a45 <InitiateVmxProcessor+0x5>
    1a45:	55                   	push   %rbp
    1a46:	48 89 fa             	mov    %rdi,%rdx
    1a49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1a50:	48 89 e5             	mov    %rsp,%rbp
    1a53:	53                   	push   %rbx
    1a54:	65 8b 1d 00 00 00 00 	mov    %gs:0x0(%rip),%ebx        # 1a5b <InitiateVmxProcessor+0x1b>
    1a5b:	89 de                	mov    %ebx,%esi
    1a5d:	89 db                	mov    %ebx,%ebx
    1a5f:	e8 00 00 00 00       	call   1a64 <InitiateVmxProcessor+0x24>
    1a64:	48 8d 1c 5b          	lea    (%rbx,%rbx,2),%rbx
    1a68:	e8 00 00 00 00       	call   1a6d <InitiateVmxProcessor+0x2d>
    1a6d:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1a74 <InitiateVmxProcessor+0x34>
    1a74:	48 c1 e3 04          	shl    $0x4,%rbx
    1a78:	48 01 df             	add    %rbx,%rdi
    1a7b:	e8 00 00 00 00       	call   1a80 <InitiateVmxProcessor+0x40>
    1a80:	84 c0                	test   %al,%al
    1a82:	0f 84 84 00 00 00    	je     1b0c <InitiateVmxProcessor+0xcc>
    1a88:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1a8f <InitiateVmxProcessor+0x4f>
    1a8f:	48 01 df             	add    %rbx,%rdi
    1a92:	e8 00 00 00 00       	call   1a97 <InitiateVmxProcessor+0x57>
    1a97:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1a9e <InitiateVmxProcessor+0x5e>
    1a9e:	48 01 df             	add    %rbx,%rdi
    1aa1:	e8 00 00 00 00       	call   1aa6 <InitiateVmxProcessor+0x66>
    1aa6:	84 c0                	test   %al,%al
    1aa8:	74 41                	je     1aeb <InitiateVmxProcessor+0xab>
    1aaa:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1ab1 <InitiateVmxProcessor+0x71>
    1ab1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1ab8:	48 8b 74 18 08       	mov    0x8(%rax,%rbx,1),%rsi
    1abd:	e8 00 00 00 00       	call   1ac2 <InitiateVmxProcessor+0x82>
    1ac2:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1ac9 <InitiateVmxProcessor+0x89>
    1ac9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1ad0:	48 8b 34 18          	mov    (%rax,%rbx,1),%rsi
    1ad4:	e8 00 00 00 00       	call   1ad9 <InitiateVmxProcessor+0x99>
    1ad9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1add:	31 c0                	xor    %eax,%eax
    1adf:	c9                   	leave
    1ae0:	31 d2                	xor    %edx,%edx
    1ae2:	31 f6                	xor    %esi,%esi
    1ae4:	31 ff                	xor    %edi,%edi
    1ae6:	e9 00 00 00 00       	jmp    1aeb <InitiateVmxProcessor+0xab>
    1aeb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1af2:	e8 00 00 00 00       	call   1af7 <InitiateVmxProcessor+0xb7>
    1af7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1afb:	b8 01 00 00 00       	mov    $0x1,%eax
    1b00:	c9                   	leave
    1b01:	31 d2                	xor    %edx,%edx
    1b03:	31 f6                	xor    %esi,%esi
    1b05:	31 ff                	xor    %edi,%edi
    1b07:	e9 00 00 00 00       	jmp    1b0c <InitiateVmxProcessor+0xcc>
    1b0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b13:	e8 00 00 00 00       	call   1b18 <InitiateVmxProcessor+0xd8>
    1b18:	eb dd                	jmp    1af7 <InitiateVmxProcessor+0xb7>
    1b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001b20 <__pfx_TerminateVmxProcessor>:
    1b20:	90                   	nop
    1b21:	90                   	nop
    1b22:	90                   	nop
    1b23:	90                   	nop
    1b24:	90                   	nop
    1b25:	90                   	nop
    1b26:	90                   	nop
    1b27:	90                   	nop
    1b28:	90                   	nop
    1b29:	90                   	nop
    1b2a:	90                   	nop
    1b2b:	90                   	nop
    1b2c:	90                   	nop
    1b2d:	90                   	nop
    1b2e:	90                   	nop
    1b2f:	90                   	nop

0000000000001b30 <TerminateVmxProcessor>:
    1b30:	e8 00 00 00 00       	call   1b35 <TerminateVmxProcessor+0x5>
    1b35:	55                   	push   %rbp
    1b36:	48 89 fa             	mov    %rdi,%rdx
    1b39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b40:	48 89 e5             	mov    %rsp,%rbp
    1b43:	53                   	push   %rbx
    1b44:	65 8b 1d 00 00 00 00 	mov    %gs:0x0(%rip),%ebx        # 1b4b <TerminateVmxProcessor+0x1b>
    1b4b:	89 de                	mov    %ebx,%esi
    1b4d:	e8 00 00 00 00       	call   1b52 <TerminateVmxProcessor+0x22>
    1b52:	85 db                	test   %ebx,%ebx
    1b54:	75 4d                	jne    1ba3 <TerminateVmxProcessor+0x73>
    1b56:	89 db                	mov    %ebx,%ebx
    1b58:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1b5f <TerminateVmxProcessor+0x2f>
    1b5f:	48 8d 1c 5b          	lea    (%rbx,%rbx,2),%rbx
    1b63:	48 c1 e3 04          	shl    $0x4,%rbx
    1b67:	48 8b 3c 18          	mov    (%rax,%rbx,1),%rdi
    1b6b:	e8 00 00 00 00       	call   1b70 <TerminateVmxProcessor+0x40>
    1b70:	48 89 c7             	mov    %rax,%rdi
    1b73:	e8 00 00 00 00       	call   1b78 <TerminateVmxProcessor+0x48>
    1b78:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1b7f <TerminateVmxProcessor+0x4f>
    1b7f:	48 8b 7c 18 08       	mov    0x8(%rax,%rbx,1),%rdi
    1b84:	e8 00 00 00 00       	call   1b89 <TerminateVmxProcessor+0x59>
    1b89:	48 89 c7             	mov    %rax,%rdi
    1b8c:	e8 00 00 00 00       	call   1b91 <TerminateVmxProcessor+0x61>
    1b91:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1b95:	31 c0                	xor    %eax,%eax
    1b97:	c9                   	leave
    1b98:	31 d2                	xor    %edx,%edx
    1b9a:	31 f6                	xor    %esi,%esi
    1b9c:	31 ff                	xor    %edi,%edi
    1b9e:	e9 00 00 00 00       	jmp    1ba3 <TerminateVmxProcessor+0x73>
    1ba3:	e8 00 00 00 00       	call   1ba8 <TerminateVmxProcessor+0x78>
    1ba8:	eb ac                	jmp    1b56 <TerminateVmxProcessor+0x26>
    1baa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001bb0 <__pfx_cpumask_weight.constprop.0>:
    1bb0:	90                   	nop
    1bb1:	90                   	nop
    1bb2:	90                   	nop
    1bb3:	90                   	nop
    1bb4:	90                   	nop
    1bb5:	90                   	nop
    1bb6:	90                   	nop
    1bb7:	90                   	nop
    1bb8:	90                   	nop
    1bb9:	90                   	nop
    1bba:	90                   	nop
    1bbb:	90                   	nop
    1bbc:	90                   	nop
    1bbd:	90                   	nop
    1bbe:	90                   	nop
    1bbf:	90                   	nop

0000000000001bc0 <cpumask_weight.constprop.0>:
    1bc0:	55                   	push   %rbp
    1bc1:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 1bc7 <cpumask_weight.constprop.0+0x7>
    1bc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1bce:	48 89 e5             	mov    %rsp,%rbp
    1bd1:	e8 00 00 00 00       	call   1bd6 <cpumask_weight.constprop.0+0x16>
    1bd6:	5d                   	pop    %rbp
    1bd7:	31 f6                	xor    %esi,%esi
    1bd9:	31 ff                	xor    %edi,%edi
    1bdb:	e9 00 00 00 00       	jmp    1be0 <__pfx_InitiateVmx>

0000000000001be0 <__pfx_InitiateVmx>:
    1be0:	90                   	nop
    1be1:	90                   	nop
    1be2:	90                   	nop
    1be3:	90                   	nop
    1be4:	90                   	nop
    1be5:	90                   	nop
    1be6:	90                   	nop
    1be7:	90                   	nop
    1be8:	90                   	nop
    1be9:	90                   	nop
    1bea:	90                   	nop
    1beb:	90                   	nop
    1bec:	90                   	nop
    1bed:	90                   	nop
    1bee:	90                   	nop
    1bef:	90                   	nop

0000000000001bf0 <InitiateVmx>:
    1bf0:	e8 00 00 00 00       	call   1bf5 <InitiateVmx+0x5>
    1bf5:	55                   	push   %rbp
    1bf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1bfd:	48 89 e5             	mov    %rsp,%rbp
    1c00:	41 55                	push   %r13
    1c02:	41 54                	push   %r12
    1c04:	53                   	push   %rbx
    1c05:	e8 00 00 00 00       	call   1c0a <InitiateVmx+0x1a>
    1c0a:	e8 b1 ff ff ff       	call   1bc0 <cpumask_weight.constprop.0>
    1c0f:	ba 30 00 00 00       	mov    $0x30,%edx
    1c14:	48 63 f8             	movslq %eax,%rdi
    1c17:	48 89 f8             	mov    %rdi,%rax
    1c1a:	48 f7 e2             	mul    %rdx
    1c1d:	70 6a                	jo     1c89 <InitiateVmx+0x99>
    1c1f:	49 89 fd             	mov    %rdi,%r13
    1c22:	be c0 0c 00 00       	mov    $0xcc0,%esi
    1c27:	48 89 c7             	mov    %rax,%rdi
    1c2a:	0f 90 c3             	seto   %bl
    1c2d:	e8 00 00 00 00       	call   1c32 <InitiateVmx+0x42>
    1c32:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1c39 <InitiateVmx+0x49>
    1c39:	48 85 c0             	test   %rax,%rax
    1c3c:	74 56                	je     1c94 <InitiateVmx+0xa4>
    1c3e:	0f b6 db             	movzbl %bl,%ebx
    1c41:	45 89 ec             	mov    %r13d,%r12d
    1c44:	45 85 ed             	test   %r13d,%r13d
    1c47:	7e 1c                	jle    1c65 <InitiateVmx+0x75>
    1c49:	48 89 da             	mov    %rbx,%rdx
    1c4c:	89 df                	mov    %ebx,%edi
    1c4e:	31 c9                	xor    %ecx,%ecx
    1c50:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1c57:	e8 00 00 00 00       	call   1c5c <InitiateVmx+0x6c>
    1c5c:	48 83 c3 01          	add    $0x1,%rbx
    1c60:	4c 39 e3             	cmp    %r12,%rbx
    1c63:	75 e4                	jne    1c49 <InitiateVmx+0x59>
    1c65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1c6c:	e8 00 00 00 00       	call   1c71 <InitiateVmx+0x81>
    1c71:	b8 01 00 00 00       	mov    $0x1,%eax
    1c76:	5b                   	pop    %rbx
    1c77:	41 5c                	pop    %r12
    1c79:	41 5d                	pop    %r13
    1c7b:	5d                   	pop    %rbp
    1c7c:	31 d2                	xor    %edx,%edx
    1c7e:	31 c9                	xor    %ecx,%ecx
    1c80:	31 f6                	xor    %esi,%esi
    1c82:	31 ff                	xor    %edi,%edi
    1c84:	e9 00 00 00 00       	jmp    1c89 <InitiateVmx+0x99>
    1c89:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 1c94 <InitiateVmx+0xa4>
    1c90:	00 00 00 00 
    1c94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1c9b:	e8 00 00 00 00       	call   1ca0 <InitiateVmx+0xb0>
    1ca0:	31 c0                	xor    %eax,%eax
    1ca2:	eb d2                	jmp    1c76 <InitiateVmx+0x86>
    1ca4:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1cab:	00 00 00 00 
    1caf:	90                   	nop

0000000000001cb0 <__pfx_TerminateVmx>:
    1cb0:	90                   	nop
    1cb1:	90                   	nop
    1cb2:	90                   	nop
    1cb3:	90                   	nop
    1cb4:	90                   	nop
    1cb5:	90                   	nop
    1cb6:	90                   	nop
    1cb7:	90                   	nop
    1cb8:	90                   	nop
    1cb9:	90                   	nop
    1cba:	90                   	nop
    1cbb:	90                   	nop
    1cbc:	90                   	nop
    1cbd:	90                   	nop
    1cbe:	90                   	nop
    1cbf:	90                   	nop

0000000000001cc0 <TerminateVmx>:
    1cc0:	e8 00 00 00 00       	call   1cc5 <TerminateVmx+0x5>
    1cc5:	55                   	push   %rbp
    1cc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1ccd:	48 89 e5             	mov    %rsp,%rbp
    1cd0:	41 54                	push   %r12
    1cd2:	53                   	push   %rbx
    1cd3:	e8 00 00 00 00       	call   1cd8 <TerminateVmx+0x18>
    1cd8:	e8 e3 fe ff ff       	call   1bc0 <cpumask_weight.constprop.0>
    1cdd:	85 c0                	test   %eax,%eax
    1cdf:	7e 2d                	jle    1d0e <TerminateVmx+0x4e>
    1ce1:	41 89 c4             	mov    %eax,%r12d
    1ce4:	31 db                	xor    %ebx,%ebx
    1ce6:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 1cec <TerminateVmx+0x2c>
    1cec:	31 c9                	xor    %ecx,%ecx
    1cee:	48 89 da             	mov    %rbx,%rdx
    1cf1:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1cf8:	89 df                	mov    %ebx,%edi
    1cfa:	e8 00 00 00 00       	call   1cff <TerminateVmx+0x3f>
    1cff:	ff 15 00 00 00 00    	call   *0x0(%rip)        # 1d05 <TerminateVmx+0x45>
    1d05:	48 83 c3 01          	add    $0x1,%rbx
    1d09:	4c 39 e3             	cmp    %r12,%rbx
    1d0c:	75 d8                	jne    1ce6 <TerminateVmx+0x26>
    1d0e:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1d15 <TerminateVmx+0x55>
    1d15:	48 85 ff             	test   %rdi,%rdi
    1d18:	74 05                	je     1d1f <TerminateVmx+0x5f>
    1d1a:	e8 00 00 00 00       	call   1d1f <TerminateVmx+0x5f>
    1d1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d26:	e8 00 00 00 00       	call   1d2b <TerminateVmx+0x6b>
    1d2b:	5b                   	pop    %rbx
    1d2c:	41 5c                	pop    %r12
    1d2e:	5d                   	pop    %rbp
    1d2f:	31 c0                	xor    %eax,%eax
    1d31:	31 d2                	xor    %edx,%edx
    1d33:	31 c9                	xor    %ecx,%ecx
    1d35:	31 f6                	xor    %esi,%esi
    1d37:	31 ff                	xor    %edi,%edi
    1d39:	e9 00 00 00 00       	jmp    1d3e <TerminateVmx+0x7e>
    1d3e:	66 90                	xchg   %ax,%ax

0000000000001d40 <__pfx_VirtualizeCurrentSystemProcessor>:
    1d40:	90                   	nop
    1d41:	90                   	nop
    1d42:	90                   	nop
    1d43:	90                   	nop
    1d44:	90                   	nop
    1d45:	90                   	nop
    1d46:	90                   	nop
    1d47:	90                   	nop
    1d48:	90                   	nop
    1d49:	90                   	nop
    1d4a:	90                   	nop
    1d4b:	90                   	nop
    1d4c:	90                   	nop
    1d4d:	90                   	nop
    1d4e:	90                   	nop
    1d4f:	90                   	nop

0000000000001d50 <VirtualizeCurrentSystemProcessor>:
    1d50:	e8 00 00 00 00       	call   1d55 <VirtualizeCurrentSystemProcessor+0x5>
    1d55:	55                   	push   %rbp
    1d56:	48 89 e5             	mov    %rsp,%rbp
    1d59:	41 55                	push   %r13
    1d5b:	49 89 fd             	mov    %rdi,%r13
    1d5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d65:	41 54                	push   %r12
    1d67:	49 89 f4             	mov    %rsi,%r12
    1d6a:	53                   	push   %rbx
    1d6b:	48 83 ec 10          	sub    $0x10,%rsp
    1d6f:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    1d76:	00 00 
    1d78:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d7c:	31 c0                	xor    %eax,%eax
    1d7e:	e8 00 00 00 00       	call   1d83 <VirtualizeCurrentSystemProcessor+0x33>
    1d83:	41 8b 5d 00          	mov    0x0(%r13),%ebx
    1d87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d8e:	89 de                	mov    %ebx,%esi
    1d90:	48 8d 1c 5b          	lea    (%rbx,%rbx,2),%rbx
    1d94:	e8 00 00 00 00       	call   1d99 <VirtualizeCurrentSystemProcessor+0x49>
    1d99:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1da0 <VirtualizeCurrentSystemProcessor+0x50>
    1da0:	48 c1 e3 04          	shl    $0x4,%rbx
    1da4:	48 01 df             	add    %rbx,%rdi
    1da7:	e8 00 00 00 00       	call   1dac <VirtualizeCurrentSystemProcessor+0x5c>
    1dac:	84 c0                	test   %al,%al
    1dae:	74 5d                	je     1e0d <VirtualizeCurrentSystemProcessor+0xbd>
    1db0:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1db7 <VirtualizeCurrentSystemProcessor+0x67>
    1db7:	48 01 df             	add    %rbx,%rdi
    1dba:	e8 00 00 00 00       	call   1dbf <VirtualizeCurrentSystemProcessor+0x6f>
    1dbf:	84 c0                	test   %al,%al
    1dc1:	74 4a                	je     1e0d <VirtualizeCurrentSystemProcessor+0xbd>
    1dc3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1dca:	e8 00 00 00 00       	call   1dcf <VirtualizeCurrentSystemProcessor+0x7f>
    1dcf:	49 8b 75 08          	mov    0x8(%r13),%rsi
    1dd3:	48 03 1d 00 00 00 00 	add    0x0(%rip),%rbx        # 1dda <VirtualizeCurrentSystemProcessor+0x8a>
    1dda:	4c 89 e2             	mov    %r12,%rdx
    1ddd:	48 89 df             	mov    %rbx,%rdi
    1de0:	e8 00 00 00 00       	call   1de5 <VirtualizeCurrentSystemProcessor+0x95>
    1de5:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi
    1de9:	bf 00 44 00 00       	mov    $0x4400,%edi
    1dee:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    1df5:	00 
    1df6:	e8 00 00 00 00       	call   1dfb <VirtualizeCurrentSystemProcessor+0xab>
    1dfb:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    1dff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1e06:	e8 00 00 00 00       	call   1e0b <VirtualizeCurrentSystemProcessor+0xbb>
    1e0b:	eb 0c                	jmp    1e19 <VirtualizeCurrentSystemProcessor+0xc9>
    1e0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1e14:	e8 00 00 00 00       	call   1e19 <VirtualizeCurrentSystemProcessor+0xc9>
    1e19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e1d:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
    1e24:	00 00 
    1e26:	75 1a                	jne    1e42 <VirtualizeCurrentSystemProcessor+0xf2>
    1e28:	48 83 c4 10          	add    $0x10,%rsp
    1e2c:	b8 01 00 00 00       	mov    $0x1,%eax
    1e31:	5b                   	pop    %rbx
    1e32:	41 5c                	pop    %r12
    1e34:	41 5d                	pop    %r13
    1e36:	5d                   	pop    %rbp
    1e37:	31 d2                	xor    %edx,%edx
    1e39:	31 f6                	xor    %esi,%esi
    1e3b:	31 ff                	xor    %edi,%edi
    1e3d:	e9 00 00 00 00       	jmp    1e42 <VirtualizeCurrentSystemProcessor+0xf2>
    1e42:	e8 00 00 00 00       	call   1e47 <VirtualizeCurrentSystemProcessor+0xf7>
    1e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1e4e:	00 00 

0000000000001e50 <__pfx_VirtualizeCurrentSystem>:
    1e50:	90                   	nop
    1e51:	90                   	nop
    1e52:	90                   	nop
    1e53:	90                   	nop
    1e54:	90                   	nop
    1e55:	90                   	nop
    1e56:	90                   	nop
    1e57:	90                   	nop
    1e58:	90                   	nop
    1e59:	90                   	nop
    1e5a:	90                   	nop
    1e5b:	90                   	nop
    1e5c:	90                   	nop
    1e5d:	90                   	nop
    1e5e:	90                   	nop
    1e5f:	90                   	nop

0000000000001e60 <VirtualizeCurrentSystem>:
    1e60:	e8 00 00 00 00       	call   1e65 <VirtualizeCurrentSystem+0x5>
    1e65:	55                   	push   %rbp
    1e66:	48 89 e5             	mov    %rsp,%rbp
    1e69:	48 83 ec 18          	sub    $0x18,%rsp
    1e6d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    1e74:	00 00 
    1e76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1e7a:	31 c0                	xor    %eax,%eax
    1e7c:	e8 3f fd ff ff       	call   1bc0 <cpumask_weight.constprop.0>
    1e81:	85 c0                	test   %eax,%eax
    1e83:	7e 24                	jle    1ea9 <VirtualizeCurrentSystem+0x49>
    1e85:	31 c9                	xor    %ecx,%ecx
    1e87:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    1e8b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1e92:	31 ff                	xor    %edi,%edi
    1e94:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1e9b:	00 
    1e9c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    1ea3:	00 
    1ea4:	e8 00 00 00 00       	call   1ea9 <VirtualizeCurrentSystem+0x49>
    1ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ead:	65 48 2b 04 25 28 00 	sub    %gs:0x28,%rax
    1eb4:	00 00 
    1eb6:	75 10                	jne    1ec8 <VirtualizeCurrentSystem+0x68>
    1eb8:	c9                   	leave
    1eb9:	31 c0                	xor    %eax,%eax
    1ebb:	31 d2                	xor    %edx,%edx
    1ebd:	31 c9                	xor    %ecx,%ecx
    1ebf:	31 f6                	xor    %esi,%esi
    1ec1:	31 ff                	xor    %edi,%edi
    1ec3:	e9 00 00 00 00       	jmp    1ec8 <VirtualizeCurrentSystem+0x68>
    1ec8:	e8 00 00 00 00       	call   1ecd <VirtualizeCurrentSystem+0x6d>

Disassembly of section .exit.text:

0000000000000000 <__pfx_cleanup_module>:
   0:	90                   	nop
   1:	90                   	nop
   2:	90                   	nop
   3:	90                   	nop
   4:	90                   	nop
   5:	90                   	nop
   6:	90                   	nop
   7:	90                   	nop
   8:	90                   	nop
   9:	90                   	nop
   a:	90                   	nop
   b:	90                   	nop
   c:	90                   	nop
   d:	90                   	nop
   e:	90                   	nop
   f:	90                   	nop

0000000000000010 <cleanup_module>:
  10:	55                   	push   %rbp
  11:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  18:	48 89 e5             	mov    %rsp,%rbp
  1b:	e8 00 00 00 00       	call   20 <cleanup_module+0x10>
  20:	5d                   	pop    %rbp
  21:	31 c0                	xor    %eax,%eax
  23:	31 ff                	xor    %edi,%edi
  25:	e9 00 00 00 00       	jmp    2a <g_GuestState+0x12>

Disassembly of section .init.text:

0000000000000000 <__pfx_init_module>:
   0:	90                   	nop
   1:	90                   	nop
   2:	90                   	nop
   3:	90                   	nop
   4:	90                   	nop
   5:	90                   	nop
   6:	90                   	nop
   7:	90                   	nop
   8:	90                   	nop
   9:	90                   	nop
   a:	90                   	nop
   b:	90                   	nop
   c:	90                   	nop
   d:	90                   	nop
   e:	90                   	nop
   f:	90                   	nop

0000000000000010 <init_module>:
  10:	e8 00 00 00 00       	call   15 <init_module+0x5>
  15:	55                   	push   %rbp
  16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	53                   	push   %rbx
  21:	e8 00 00 00 00       	call   26 <init_module+0x16>
  26:	e8 00 00 00 00       	call   2b <init_module+0x1b>
  2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  32:	48 89 c3             	mov    %rax,%rbx
  35:	48 89 c6             	mov    %rax,%rsi
  38:	e8 00 00 00 00       	call   3d <init_module+0x2d>
  3d:	48 89 df             	mov    %rbx,%rdi
  40:	e8 00 00 00 00       	call   45 <init_module+0x35>
  45:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  49:	31 c0                	xor    %eax,%eax
  4b:	c9                   	leave
  4c:	31 f6                	xor    %esi,%esi
  4e:	31 ff                	xor    %edi,%edi
  50:	e9 00 00 00 00       	jmp    55 <__UNIQUE_ID_vermagic250+0x3>

Disassembly of section .altinstr_replacement:

0000000000000000 <.altinstr_replacement>:
   0:	e8 00 00 00 00       	call   5 <.altinstr_replacement+0x5>
   5:	fa                   	cli
   6:	e8 00 00 00 00       	call   b <.altinstr_replacement+0xb>
   b:	fb                   	sti
